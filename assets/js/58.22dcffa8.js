(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{468:function(s,t,a){"use strict";a.r(t);var n=a(20),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"硬件基础"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#硬件基础"}},[s._v("#")]),s._v(" 硬件基础")]),s._v(" "),a("h3",{attrs:{id:"概览"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概览"}},[s._v("#")]),s._v(" 概览")]),s._v(" "),a("p",[s._v("SPI(Serial Peripheral Interface)，是一种“一主多从”的同步通信方式。它的方式是“全速高双工”（允许通信双方同时收发信息）速度非常快，SPI 接口的读写操作，都是由主设备发起。当存在多个从设备时，通过各自的片选信号进行管理")]),s._v(" "),a("p",[s._v("它的接线除了时钟线与两根数据线之外，还需要每个设备的自己的 SS 线")]),s._v(" "),a("h3",{attrs:{id:"信号线"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#信号线"}},[s._v("#")]),s._v(" 信号线")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("SCLK")]),s._v("：串行时钟信号，由主设备产生")]),s._v(" "),a("li",[a("strong",[s._v("MISO")]),s._v("：主设备输入 / 从设备输出引脚。该引脚在从模式下发送数据，在主模式下接收数据")]),s._v(" "),a("li",[a("strong",[s._v("MOSI")]),s._v("：主设备输出 / 从设备输入引脚。该引脚在主模式下发送数据，在从模式下接收数据")]),s._v(" "),a("li",[a("strong",[s._v("CS/SS")]),s._v("：从设备片选信号，由主设备控制。它的功能是用来作为“片选引脚”，也就是选择指定的从设备，让主设备可以单独地与特定从设备通讯，避免数据线上的冲突")])]),s._v(" "),a("div",{attrs:{align:"center"}},[a("img",{staticStyle:{zoom:"80%"},attrs:{src:"https://cdn.jsdelivr.net/gh/CHANShu0508/images_shack/images/20201004200849.jpg"}})]),s._v(" "),a("h2",{attrs:{id:"协议基础"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#协议基础"}},[s._v("#")]),s._v(" 协议基础")]),s._v(" "),a("h3",{attrs:{id:"spi-设备选择"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#spi-设备选择"}},[s._v("#")]),s._v(" SPI 设备选择")]),s._v(" "),a("p",[s._v("在 SPI 协议中有主机与从机的区别，当主机想要与某个从机进行通信时，它会将从机的 SS 线电平拉低，表示我们两个要谈谈了。随后将会在时钟线 SCK 上输出时钟信号，为整个传输提供时钟支持")]),s._v(" "),a("p",[s._v("随后，主设备、从设备将通过两根数据线进行通讯")]),s._v(" "),a("h3",{attrs:{id:"spi-数据发送"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#spi-数据发送"}},[s._v("#")]),s._v(" SPI 数据发送")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("传输细节")]),s._v(" "),a("p",[s._v("SPI 主机和从机都有一个"),a("strong",[s._v("串行移位寄存器")]),s._v("，主机通过向它的 SPI 串行寄存器写入一个字节来发起一次传输：")]),s._v(" "),a("ol",[a("li",[s._v("首先拉低对应 SS 信号线，表示与该设备进行通信")]),s._v(" "),a("li",[s._v("主机通过发送 SCLK 时钟信号，来告诉从机写数据或者读数据。这里要注意，SCLK 时钟信号可能是低电平有效，也可能是高电平有效，因为 SPI 有四种模式，这个在下面会介绍")]),s._v(" "),a("li",[s._v("主机 (Master) 将要发送的数据写到发送数据缓存区 (Memory)，缓存区经过移位寄存器 (0~7)，串行移位寄存器通过 MOSI 信号线将字节一位一位的移出去传送给从机，同时 MISO 接口接收到的数据经过移位寄存器一位一位的移到接收缓存区")]),s._v(" "),a("li",[s._v("从机 (Slave) 也将自己的串行移位寄存器 (0~7) 中的内容通过 MISO 信号线返回给主机。同时通过 MOSI 信号线接收主机发送的数据，这样，两个移位寄存器中的内容就被交换。")])])]),s._v(" "),a("div",{attrs:{align:"center"}},[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/CHANShu0508/images_shack/images/20201004204427.png"}})]),s._v(" "),a("p",[s._v("也就是讲，在 SPI 通讯中，没有特定的去读与写的操作，而是主机与从机之间交换数据的过程，但是主机占的主导地位。要想读到从机的数据，主机就必须发送一些数据来进行交换。"),a("strong",[s._v("也就是说，你发一个数据必然会收到一个数据；你要收一个数据必须也要先发一个数据")])]),s._v(" "),a("h3",{attrs:{id:"spi-四种模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#spi-四种模式"}},[s._v("#")]),s._v(" SPI 四种模式")]),s._v(" "),a("p",[s._v("其实四种模式完全由两个参数决定：")]),s._v(" "),a("h4",{attrs:{id:"时钟极性-cpol"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#时钟极性-cpol"}},[s._v("#")]),s._v(" 时钟极性（CPOL）")]),s._v(" "),a("ul",[a("li",[s._v("当 "),a("strong",[s._v("CPOL = 1")]),s._v("，此时表示时钟信号为"),a("strong",[s._v("高电平")]),s._v("时为有效状态，时钟信号低电平时处于空闲态")]),s._v(" "),a("li",[s._v("当 "),a("strong",[s._v("CPOL = 0")]),s._v("，此时表示时钟信号为"),a("strong",[s._v("低电平")]),s._v("时为有效信号，时钟信号高电平时处于空闲态")])]),s._v(" "),a("h4",{attrs:{id:"时钟相位-cpha"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#时钟相位-cpha"}},[s._v("#")]),s._v(" 时钟相位（CPHA）")]),s._v(" "),a("ul",[a("li",[s._v("当 "),a("strong",[s._v("CPHA = 0")]),s._v("，此时表示将会在时钟信号的"),a("strong",[s._v("第奇数次")]),s._v("跳变沿进行数据采集，相应的在第偶数次进行数据发送")]),s._v(" "),a("li",[s._v("当 "),a("strong",[s._v("CPHA = 1")]),s._v("，此时表示将会在时钟信号的"),a("strong",[s._v("第偶数次")]),s._v("跳变沿进行数据采集，相应的在第奇数次进行数据发送")])]),s._v(" "),a("div",{attrs:{align:"center"}},[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/CHANShu0508/images_shack/images/20201004210738.png"}})]),s._v(" "),a("p",[s._v("这两个参数的不同组合直接组成了四种不同的 SPI 模式")]),s._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[s._v("注意")]),s._v(" "),a("p",[s._v("主设备与从设备必须使用"),a("strong",[s._v("相同的工作模式")]),s._v("才可以进行数据交换")]),s._v(" "),a("p",[s._v("如果有多个从设备，并且它们使用了不同的工作模式，那么主设备必须在读写不同从设备时需要重新修改对应从设备的模式，或者使用不同的 SPI 接口")])]),s._v(" "),a("h3",{attrs:{id:"优缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优缺点"}},[s._v("#")]),s._v(" 优缺点")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("优点：")]),s._v(" "),a("p",[s._v("他没有规定最大传输速率，没有地址方案，也没规定通信应答机制，没有规定流控制规则")])]),s._v(" "),a("li",[a("p",[s._v("缺点")]),s._v(" "),a("p",[s._v("没有指定的流控制，没有应答机制确认是否接收到数据")])])]),s._v(" "),a("h2",{attrs:{id:"配置-cubemx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置-cubemx"}},[s._v("#")]),s._v(" 配置 CubeMX")]),s._v(" "),a("h3",{attrs:{id:"spi-使能页面"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#spi-使能页面"}},[s._v("#")]),s._v(" SPI 使能页面")]),s._v(" "),a("p",[s._v("点击 SPI 页面，首先出现的两个框就是设置 SPI 工作模式与是否使用硬件自带的 NSS 接线的选项：")]),s._v(" "),a("p",[a("strong",[s._v("模式设置 :")])]),s._v(" "),a("ul",[a("li",[s._v("有主机模式全双工 / 半双工")]),s._v(" "),a("li",[s._v("从机模式全双工 / 半双工")]),s._v(" "),a("li",[s._v("只接收主机模式 / 只接收从机模式")]),s._v(" "),a("li",[s._v("只发送主机模式")])]),s._v(" "),a("div",{attrs:{align:"center"}},[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/CHANShu0508/images_shack/images/20201005204440.png"}})]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("关于片选NSS引脚")]),s._v(" "),a("p",[s._v("我们知道主机拉低从机的 SS 线电平代表开始通信。而 STM32 天生的提供了两种方式：硬件 NSS 片选信号与自己接 SS 线。")]),s._v(" "),a("p",[s._v("当然，如果你选择自己接 SS 线的话，当然要在写代码的时候在收发程序之前拉低、抬高这条线的电平（GPIO 正常推挽输出就行）")])]),s._v(" "),a("h3",{attrs:{id:"详细设置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#详细设置"}},[s._v("#")]),s._v(" 详细设置")]),s._v(" "),a("p",[s._v("详细设置页的几种配置如下：")]),s._v(" "),a("div",{attrs:{align:"center"}},[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/CHANShu0508/images_shack/images/20201005205920.png"}})]),s._v(" "),a("h2",{attrs:{id:"程序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#程序"}},[s._v("#")]),s._v(" 程序")]),s._v(" "),a("h3",{attrs:{id:"库函数们"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#库函数们"}},[s._v("#")]),s._v(" 库函数们")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* I/O operation functions */")]),s._v("\nHAL_StatusTypeDef "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("HAL_SPI_Transmit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("SPI_HandleTypeDef "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("hspi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("uint8_t")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("pData"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("uint16_t")]),s._v(" Size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("uint32_t")]),s._v(" Timeout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nHAL_StatusTypeDef "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("HAL_SPI_Receive")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("SPI_HandleTypeDef "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("hspi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("uint8_t")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("pData"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("uint16_t")]),s._v(" Size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("uint32_t")]),s._v(" Timeout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nHAL_StatusTypeDef "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("HAL_SPI_TransmitReceive")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("SPI_HandleTypeDef "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("hspi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("uint8_t")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("pTxData"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("uint8_t")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("pRxData"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("uint16_t")]),s._v(" Size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("uint32_t")]),s._v(" Timeout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nHAL_StatusTypeDef "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("HAL_SPI_Transmit_IT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("SPI_HandleTypeDef "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("hspi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("uint8_t")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("pData"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("uint16_t")]),s._v(" Size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nHAL_StatusTypeDef "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("HAL_SPI_Receive_IT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("SPI_HandleTypeDef "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("hspi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("uint8_t")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("pData"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("uint16_t")]),s._v(" Size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nHAL_StatusTypeDef "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("HAL_SPI_TransmitReceive_IT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("SPI_HandleTypeDef "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("hspi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("uint8_t")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("pTxData"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("uint8_t")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("pRxData"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("uint16_t")]),s._v(" Size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nHAL_StatusTypeDef "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("HAL_SPI_Transmit_DMA")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("SPI_HandleTypeDef "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("hspi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("uint8_t")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("pData"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("uint16_t")]),s._v(" Size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nHAL_StatusTypeDef "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("HAL_SPI_Receive_DMA")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("SPI_HandleTypeDef "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("hspi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("uint8_t")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("pData"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("uint16_t")]),s._v(" Size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nHAL_StatusTypeDef "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("HAL_SPI_TransmitReceive_DMA")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("SPI_HandleTypeDef "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("hspi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("uint8_t")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("pTxData"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("uint8_t")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("pRxData"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("uint16_t")]),s._v(" Size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nHAL_StatusTypeDef "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("HAL_SPI_DMAPause")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("SPI_HandleTypeDef "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("hspi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nHAL_StatusTypeDef "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("HAL_SPI_DMAResume")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("SPI_HandleTypeDef "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("hspi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nHAL_StatusTypeDef "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("HAL_SPI_DMAStop")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("SPI_HandleTypeDef "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("hspi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Transfer Abort functions */")]),s._v("\nHAL_StatusTypeDef "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("HAL_SPI_Abort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("SPI_HandleTypeDef "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("hspi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nHAL_StatusTypeDef "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("HAL_SPI_Abort_IT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("SPI_HandleTypeDef "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("hspi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Call back function */")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("HAL_SPI_IRQHandler")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("SPI_HandleTypeDef "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("hspi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("HAL_SPI_TxCpltCallback")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("SPI_HandleTypeDef "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("hspi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("HAL_SPI_RxCpltCallback")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("SPI_HandleTypeDef "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("hspi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("HAL_SPI_TxRxCpltCallback")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("SPI_HandleTypeDef "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("hspi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("HAL_SPI_TxHalfCpltCallback")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("SPI_HandleTypeDef "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("hspi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("HAL_SPI_RxHalfCpltCallback")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("SPI_HandleTypeDef "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("hspi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("HAL_SPI_TxRxHalfCpltCallback")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("SPI_HandleTypeDef "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("hspi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("HAL_SPI_ErrorCallback")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("SPI_HandleTypeDef "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("hspi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("HAL_SPI_AbortCpltCallback")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("SPI_HandleTypeDef "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("hspi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br")])]),a("p",[s._v("关于函数的使用、参数的意义请参考库函数手册。")]),s._v(" "),a("p",[s._v("关于情况下对于函数类型的使用，请参考串口的使用方法")]),s._v(" "),a("p",[s._v("但是有一个函数 "),a("code",[s._v("HAL_SPI_TransmitReceive()")]),s._v(" 是在一边发送一边接收数据，所以你要准备好你的两个数据缓存区")]),s._v(" "),a("h3",{attrs:{id:"程序流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#程序流程"}},[s._v("#")]),s._v(" 程序流程")]),s._v(" "),a("div",{attrs:{align:"center"}},[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/CHANShu0508/images_shack/images/20201005211205.png"}})]),s._v(" "),a("p",[s._v("流程大致如上。")]),s._v(" "),a("p",[s._v("技巧性的代码大概就是将拉低与抬高 SS 线电平的函数使用宏代替以提高可读性：")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 例如 GPIOB13 为某个设备的 SPI_CS/SS")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token macro-name function"}},[s._v("DEVICE_SPI_ENABLE")]),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("HAL_GPIO_WritePin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("GPIOB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" GPIO_PIN_13"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" GPIO_PIN_RESET"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")])])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token macro-name function"}},[s._v("DEVICE_SPI_DISABLE")]),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("HAL_GPIO_WritePin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("GPIOB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" GPIO_PIN_13"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" GPIO_PIN_SET"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")])])]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h3",{attrs:{id:"参考代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考代码"}},[s._v("#")]),s._v(" 参考代码")]),s._v(" "),a("blockquote",[a("p",[s._v("以下代码来自于 ST 给出的示例代码")]),s._v(" "),a("p",[s._v("别管这个怎么写的，你的 SS 线改拉低还是要拉低")])]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/********* 定义数据缓存区 **********/")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Buffer used for transmission */")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("uint8_t")]),s._v(" aTxBuffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"****SPI - Two Boards communication based on Polling **** SPI Message ******** SPI Message ******** SPI Message ****"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Buffer used for reception */")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("uint8_t")]),s._v(" aRxBuffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("BUFFERSIZE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("details",{staticClass:"custom-block details"},[a("summary",[s._v("Polling模式发送接收")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*##-2- Start the Full Duplex Communication process ########################*/")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('/* While the SPI in TransmitReceive process, user can transmit data through\n       "aTxBuffer" buffer & receive data through "aRxBuffer" */')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Timeout is set to 5s */")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("switch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("HAL_SPI_TransmitReceive")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("SpiHandle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("uint8_t")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("aTxBuffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("uint8_t")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("aRxBuffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" BUFFERSIZE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" HAL_OK"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Communication is completed_____________________________________________*/")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Compare the sent and received buffers */")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Buffercmp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("uint8_t")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("aTxBuffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("uint8_t")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("aRxBuffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" BUFFERSIZE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Transfer error in transmission process */")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Error_Handler")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Turn LED4 on: Transfer in transmission process is correct */")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("BSP_LED_On")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("LED4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Turn LED6 on: Transfer in reception process is correct */")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("BSP_LED_On")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("LED6"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" HAL_TIMEOUT"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* A Timeout occurred______________________________________________________*/")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Call Timeout Handler */")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Timeout_Error_Handler")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* An Error occurred_______________________________________________________*/")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" HAL_ERROR"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Call Timeout Handler */")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Error_Handler")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br")])])]),s._v(" "),a("p",[s._v("这段代码真的很好！不管是正常发送、超时还是错误都是有指示灯在提醒，且有相应的函数去处理错误的发生")]),s._v(" "),a("p",[s._v("而"),a("code",[s._v("Buffercmp()")]),s._v(" 是在比较发送与接收到的两个数据是否相同，因为这个示例是在一个板子自己通讯")]),s._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[s._v("中断模式收发数据")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 传输数据开始")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("HAL_SPI_TransmitReceive_IT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("SpiHandle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("uint8_t")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("aTxBuffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("uint8_t")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("aRxBuffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" BUFFERSIZE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" HAL_OK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Transfer error in transmission process */")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Error_Handler")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 等待传输完成")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*  Before starting a new communication transfer, you need to check the current   \n      state of the peripheral; if it抯 busy you need to wait for the end of current\n      transfer before starting a new one.\n      For simplicity reasons, this example is just waiting till the end of the \n      transfer, but application may perform other tasks while transfer operation\n      is ongoing. */")]),s._v("  \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("HAL_SPI_GetState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("SpiHandle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" HAL_SPI_STATE_READY"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br")])])]),s._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[s._v("DMA模式收发数据")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 传输数据开始")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("HAL_SPI_TransmitReceive_DMA")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("SpiHandle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("uint8_t")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("aTxBuffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("uint8_t")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("aRxBuffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" BUFFERSIZE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" HAL_OK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Transfer error in transmission process */")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Error_Handler")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 等待传输完成")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*  Before starting a new communication transfer, you need to check the current   \n      state of the peripheral; if it抯 busy you need to wait for the end of current\n      transfer before starting a new one.\n      For simplicity reasons, this example is just waiting till the end of the \n      transfer, but application may perform other tasks while transfer operation\n      is ongoing. */")]),s._v("  \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("HAL_SPI_GetState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("SpiHandle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" HAL_SPI_STATE_READY"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br")])])]),s._v(" "),a("p",[s._v("你真的应该多看看源码，因为他们写的代码真的很好")]),s._v(" "),a("h2",{attrs:{id:"参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[s._v("#")]),s._v(" 参考")]),s._v(" "),a("p",[s._v("[1] SPI 原理超详细讲解："),a("a",{attrs:{href:"https://blog.csdn.net/as480133937/article/details/105764119",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://blog.csdn.net/as480133937/article/details/105764119"),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("[2] Robomaster 开发板 C 型嵌入式教程文档")])])}),[],!1,null,null,null);t.default=e.exports}}]);