(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{465:function(s,t,a){"use strict";a.r(t);var n=a(20),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"写在前面"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#写在前面"}},[s._v("#")]),s._v(" 写在前面")]),s._v(" "),a("p",[s._v("如果要了解串口的原理与一些配置相关的东西，可以去找之前写过的一篇"),a("RouterLink",{attrs:{to:"/pages/a4ea7f/"}},[s._v("这篇文章")]),s._v("。但是它到之后的程序阶段就最好先别看了，因为我自己也无法验证到底对不对。所以程序的部分改为以下内容")],1),s._v(" "),a("h2",{attrs:{id:"非-dma-方式传输"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#非-dma-方式传输"}},[s._v("#")]),s._v(" 非 DMA 方式传输")]),s._v(" "),a("h3",{attrs:{id:"阻塞式发送函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#阻塞式发送函数"}},[s._v("#")]),s._v(" 阻塞式发送函数")]),s._v(" "),a("p",[s._v("特点：发送时没有发完单片机不能执行其他工作")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[s._v("HAL_StatusTypeDef  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("HAL_UART_Transmit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("UART_HandleTypeDef "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("huart"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("uint8_t")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("pData"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("uint16_t")]),s._v(" Size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("uint32_t")]),s._v(" Timeout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//参数1：huart，串口实例的指针")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//参数2：*pData，待发送数据缓冲区的指针")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//参数3：Size，待发送数据的字节数")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//参数4：Timeout，超时时间值")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//返回值：HAL_StatusTypeDef，函数执行状态。")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("如果超出超时时间值，会自己结束以免打扰其他进程")]),s._v(" "),a("h3",{attrs:{id:"非阻塞式发送函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#非阻塞式发送函数"}},[s._v("#")]),s._v(" 非阻塞式发送函数")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[s._v("HAL_StatusTypeDef  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("HAL_UART_Transmit_IT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("UART_HandleTypeDef "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("huart"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("uint8_t")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("pData"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("uint16_t")]),s._v(" Size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//参数1：huart，串口实例的指针")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//参数2：*pData，待发送数据缓冲区的指针")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//参数3：Size，待发送数据的字节数")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//返回值：HAL_StatusTypeDef，函数执行状态")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("////串口发送完毕中断回调函数  ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("HAL_UART_TxCpltCallback")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("UART_HandleTypeDef  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("huart"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("HAL_UART_TxHalfCpltCallback")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("UART_HandleTypeDef  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("huart"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//发完一半进入")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("发送完之后，会进入发送完中断")]),s._v(" "),a("p",[s._v("运行示例：")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("HAL_UART_Transmit_IT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("huart1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("  dat_Txd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("HAL_UART_TxCpltCallback")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("UART_HandleTypeDef  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("huart"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("         \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("huart"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v("Instance "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" USART1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("         \n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("             \n        "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("HAL_GPIO_TogglePin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("GPIOB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("GPIO_PIN_9"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("    \n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("判断句柄是否正确的"),a("code",[s._v("huart->Instance")]),s._v("是它的基地址")]),s._v(" "),a("h3",{attrs:{id:"非阻塞式接收函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#非阻塞式接收函数"}},[s._v("#")]),s._v(" 非阻塞式接收函数")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[s._v("HAL_StatusTypeDef  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("HAL_UART_Receive")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("UART_HandleTypeDef "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("huart"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("uint8_t")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("pData"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("uint16_t")]),s._v(" Size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("uint32_t")]),s._v(" Timeout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//参数1：huart，串口实例的指针")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//参数2：*pData，数据接收据缓冲区的指针")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//参数3：Size，待接收数据的字节数")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//参数4：Timeout，超时时间值")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//返回值：HAL_StatusTypeDef，函数执行状态")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("不推荐使用，因为发来数据的对象发送的时间不可控，但你的时间是确定的")]),s._v(" "),a("h3",{attrs:{id:"阻塞式接收函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#阻塞式接收函数"}},[s._v("#")]),s._v(" 阻塞式接收函数")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[s._v("HAL_StatusTypeDef  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("HAL_UART_Receive_IT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("UART_HandleTypeDef "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("huart"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("uint8_t")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("pData"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("uint16_t")]),s._v(" Size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//参数1：huart，串口实例的指针。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//参数2：*pData，数据接收据缓冲区的指针。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//参数3：Size，待接收数据的字节数。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//返回值：HAL_StatusTypeDef，函数执行状态。")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("////串口接收完毕中断回调函数")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("HAL_UART_RxCpltCallback")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("UART_HandleTypeDef  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("huart"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("HAL_UART_RxHalfCpltCallback")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("UART_HandleTypeDef  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("huart"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("接收完之后，会进入接收完中断")]),s._v(" "),a("p",[s._v("运行实例：")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//使用中断，非阻塞方式")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("HAL_UART_Transmit_IT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("huart1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("dat_Rxd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("HAL_UART_RxCpltCallback")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("UART_HandleTypeDef  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("huart"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("    \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("        \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("huart"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v("Instance "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" USART1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("    \n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("       \n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("dat_Rxd "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x5A")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("      \n            "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("HAL_GPIO_TogglePin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("GPIOB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("GPIO_PIN_8"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[s._v("接收完一个字节就中断")]),s._v(" "),a("h2",{attrs:{id:"非-dma-实例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#非-dma-实例"}},[s._v("#")]),s._v(" 非 DMA 实例")]),s._v(" "),a("p",[s._v("我们循序渐进的用不同等级的代码来实现板间的串口通信")]),s._v(" "),a("h3",{attrs:{id:"阻塞式发送与非阻塞式接收"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#阻塞式发送与非阻塞式接收"}},[s._v("#")]),s._v(" 阻塞式发送与非阻塞式接收")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*\n  @brief  简单的串口通信\n  @type   使用阻塞式发送与非阻塞式接收\n  @coding UTF-8\n*/")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//// main 之前的内容")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 定义简单的LED开闭宏")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token macro-name function"}},[s._v("LEDx_ON")]),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("HAL_GPIO_WritePin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("GPIOx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" GPIO_PINx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" GPIO_PIN_SET"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")])])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token macro-name function"}},[s._v("LEDx_OFF")]),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("HAL_GPIO_WritePin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("GPIOx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" GPIO_PINx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" GPIO_PIN_RESET"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")])])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 收发使用的数组与数字")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("uint8_t")]),s._v(" Tx_str1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"LEDx is opened.\\r\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("uint8_t")]),s._v(" Tx_str2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"LEDx is cloesd.\\r\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("uint8_t")]),s._v(" Rx_data "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//// 回调函数")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("HAL_UART_RxCpltCallback")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("UART_HandleTypeDef "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("huart"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Rx_data "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0xa1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("LEDx_ON")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("HAL_UART_Transmit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("huart1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" Tx_str1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("sizeof")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Tx_str1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// @注意1")]),s._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("HAL_UART_Receive_IT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("huart"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("Rx_data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Rx_data "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0xa2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("LEDx_OFF")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("HAL_UART_Transmit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("huart1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" Tx_str2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("sizeof")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Tx_str2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// @注意1")]),s._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("HAL_UART_Receive_IT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("huart"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("Rx_data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//// main中的自定义内容")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// forward")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 启动接受中断（非阻塞式接收函数）")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("HAL_UART_Receive_IT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("huart1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("Rx_data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// later")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br")])]),a("p",[s._v("这段函数的作用就是使能了串口1，也就是 "),a("code",[s._v("UART1")]),s._v(" 的接收中断，接受传入到串口1的信息，并且每接受一个数据帧（长度可设置，一般为 8bit，也就是两位16进制数）之后发生中断")]),s._v(" "),a("p",[s._v("在中断中，检测这个发来的2位16进制数，如果大小为 "),a("code",[s._v("0xa1")]),s._v(" 则打开 LED，并向信息来源发送“LED is opened”；如果大小是 "),a("code",[s._v("0xa2")]),s._v(" 则关闭 LED，并向信息来源发送“LED is closed”。")]),s._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[s._v("注意解析")]),s._v(" "),a("ol",[a("li",[s._v("在接收中断，也就是"),a("code",[s._v("HAL_UART_Receive_IT()")]),s._v(" 作用过一次之后，他就失效了，也就是这一句函数只管使用一次接收")])])]),s._v(" "),a("h2",{attrs:{id:"dma-方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dma-方式"}},[s._v("#")]),s._v(" DMA 方式")]),s._v(" "),a("h3",{attrs:{id:"dma-是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dma-是什么"}},[s._v("#")]),s._v(" DMA 是什么")]),s._v(" "),a("p",[s._v("DMA 全称 "),a("code",[s._v("Direct Memory Access")]),s._v("(直接存储器访问)，是 STM32 的一个外设，它的特点在于：")]),s._v(" "),a("p",[s._v("在"),a("strong",[s._v("不占用 CPU 的情况下")]),s._v("将数据从存储器直接搬运到外设，或者从外设直接搬运到存储器，当然也可以从存储器直接搬运到存储器。")]),s._v(" "),a("p",[s._v("比如在需要串口发送大量数据的时候，CPU 只需要"),a("strong",[s._v("发起 DMA 传输请求")]),s._v("，然后就可以去做别的事情了，DMA 会将数据传输到串口发送，"),a("strong",[s._v("DMA 传输完之后会触发中断")]),s._v("，CPU 如果有需要，可以对该中断进行处理，这样一来 CPU 的效率就大大提高了")]),s._v(" "),a("h3",{attrs:{id:"cubemx设置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cubemx设置"}},[s._v("#")]),s._v(" CubeMX设置")]),s._v(" "),a("p",[s._v("比起串口的设置只需要注意一下几点即可：")]),s._v(" "),a("h4",{attrs:{id:"配置dma"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置dma"}},[s._v("#")]),s._v(" 配置DMA")]),s._v(" "),a("div",{attrs:{align:"center"}},[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/CHANShu0508/images_shack/images/20201002204745.png"}})]),s._v(" "),a("ol",[a("li",[s._v("可以设置从 FLASH 到外设或者 SRAM 到外设")]),s._v(" "),a("li",[s._v("优先程度“Priority”也可调")]),s._v(" "),a("li",[s._v("数据宽度一般默认，在代码中设定")]),s._v(" "),a("li",[s._v("模式中，我们可以设置为“Circle”或者自己手动在 DMA 接受时像中断接收一样一遍又一遍的使能接收")])]),s._v(" "),a("h3",{attrs:{id:"函数部分"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数部分"}},[s._v("#")]),s._v(" 函数部分")]),s._v(" "),a("h4",{attrs:{id:"发送函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#发送函数"}},[s._v("#")]),s._v(" 发送函数")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[s._v("HAL_StatusTypeDef "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("HAL_UART_Transmit_DMA")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" UART_HandleTypeDef "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("huart"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("uint8_t")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("pData"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("uint16_t")]),s._v(" Size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//参数1：huart，串口实例的指针")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//参数2：*pData，待发送数据缓冲区的指针")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//参数3：Size，待发送数据的字节数")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//返回值：HAL_StatusTypeDef，函数执行状态")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h3",{attrs:{id:"接收函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#接收函数"}},[s._v("#")]),s._v(" 接收函数")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[s._v("HAL_StatusTypeDef "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("HAL_UART_Receive_DMA")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" UART_HandleTypeDef "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("huart"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("uint8_t")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("pData"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("uint16_t")]),s._v(" Size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//参数1：huart，串口实例的指针")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//参数2：*pData，接收数据缓冲区的指针")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//参数3：Size，待接收数据的字节数")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//返回值：HAL_StatusTypeDef，函数执行状态")]),s._v("\n    \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("////串口接收完毕中断回调函数")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("HAL_UART_RxCpltCallback")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("UART_HandleTypeDef  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("huart"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("HAL_UART_RxHalfCpltCallback")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("UART_HandleTypeDef  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("huart"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("像中断接收的方法一样，我们在使用这个函数的时候也是只有一次作用的机会，如果没有在模式设置中设为“Circle”时，则必须手动开启")]),s._v(" "),a("p",[s._v("且 DMA 方式接收的时候依然会有接受完中断或者接收一半中断，我们可以通过这个特性设置双缓存区等等")]),s._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[s._v("注意")]),s._v(" "),a("p",[s._v("这里的设置中一定要开启"),a("code",[s._v("UART")]),s._v("的全局中断，否则 DMA 的发送将只能工作一次！亲测")])]),s._v(" "),a("h2",{attrs:{id:"重定向printf"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重定向printf"}},[s._v("#")]),s._v(" 重定向printf")]),s._v(" "),a("p",[s._v("我们在普通环境下使用C编程时通常会使用 "),a("code",[s._v("printf")]),s._v(" 函数打印数据，但是由于 "),a("code",[s._v("printf")]),s._v("函数使用了半主机模式，所以直接使用标准库会导致程序无法运行。我们通常会使用一些方式对 "),a("code",[s._v("printf")]),s._v(" 进行重定向来代替 "),a("code",[s._v("HAL_Transmit_xx")]),s._v(" 来从串口输出数据，其实有很多方法，"),a("a",{attrs:{href:"http://www.mculover666.cn/posts/2251182441/#toc-heading-2",target:"_blank",rel:"noopener noreferrer"}},[s._v("这篇文章"),a("OutboundLink")],1),s._v("讲的不错，这里只记录下最简单的一个")]),s._v(" "),a("h3",{attrs:{id:"通过-microlib-重定向"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通过-microlib-重定向"}},[s._v("#")]),s._v(" 通过 MicroLib 重定向")]),s._v(" "),a("p",[s._v("首先要在魔术棒里的“Target”中勾选“Use MicroLib”选项，一定要勾选！")]),s._v(" "),a("p",[s._v("由于在"),a("code",[s._v("printf")]),s._v("的底层，它是不会一个字符一个字符去输出，而是会调用更底层的 I/O 函数："),a("code",[s._v("fputc")]),s._v(" 去逐个字符打印，所以只需要重定向此函数至串口即可：")]),s._v(" "),a("p",[s._v("可以在"),a("code",[s._v("uart.c")]),s._v("中添加如下代码：")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* USER CODE BEGIN 1 */")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")])])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("<stdio.h>")])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("fputc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" ch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" FILE "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("stream"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* 堵塞判断串口是否发送完成且等待 */")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("USART1"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v("ISR "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0X40")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* 串口发送完成，将该字符发送 */")]),s._v("\n    USART1"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v("TDR "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("uint8_t")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" ch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" ch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("endif")])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* USER CODE END 1 */")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[s._v("注意")]),s._v(" "),a("p",[s._v("如果是  STM32F1 系列，上面这段代码不适用，请使用下面的代码")])]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* USER CODE BEGIN 1 */")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")])])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("<stdio.h>")])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("fputc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" ch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" FILE "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("stream"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* 堵塞判断串口是否发送完成且等待 */")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("USART1"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v("SR "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0X40")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* 串口发送完成，将该字符发送 */")]),s._v("\n    USART1"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v("DR "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("uint8_t")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" ch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" ch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("endif")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* USER CODE END 1 */")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])]),a("p",[s._v("我们均使用了寄存器操作以提高效率！")]),s._v(" "),a("p",[s._v("其他两种方法可以了解一下！！")])])}),[],!1,null,null,null);t.default=e.exports}}]);