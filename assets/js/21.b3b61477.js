(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{431:function(s,t,a){"use strict";a.r(t);var n=a(20),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("blockquote",[a("p",[s._v("本文来源于互联网，如有侵权请联系博主删除")])]),s._v(" "),a("p",[s._v("各位未来的嵌入式程序员，你想知道是否能够成为一个出色的工程师，你是否想知道自己对嵌入式了解程度如何，那么请关注一下我们接下来讨论的问题")]),s._v(" "),a("h2",{attrs:{id:"_1-0-预处理器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-0-预处理器"}},[s._v("#")]),s._v(" 1.0 预处理器")]),s._v(" "),a("h3",{attrs:{id:"_1-1-问题一"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-问题一"}},[s._v("#")]),s._v(" 1.1 问题一")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("Question 1")]),s._v(" "),a("p",[s._v("用预处理指令"),a("code",[s._v("#define")]),s._v(" 声明一个常数，用以表明1年中有多少秒（忽略闰年问题）")])]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token macro-name"}},[s._v("SECONDS_PER_YEAR")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[s._v("（"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("60")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("60")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("24")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("365")]),s._v("）UL")])]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[s._v("#define 语法的基本知识（例如：不能以分号结束，括号的使用，等等）")]),s._v(" "),a("li",[s._v("懂得预处理器将为你计算常数表达式的值，因此，直接写出你是如何计算一年中有多少秒而不是计算出实际的值，是更清晰而没有代价的")]),s._v(" "),a("li",[s._v("意识到这个表达式将使一个16位机的整型数溢出-因此要用到长整型符号L，告诉编译器这个常数是的长整型数")]),s._v(" "),a("li",[s._v("如果你在你的表达式中用到UL（表示无符号长整型），那么你有了一个好的起点。记住，第一印象很重要")])]),s._v(" "),a("h3",{attrs:{id:"_1-2-问题二"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-问题二"}},[s._v("#")]),s._v(" 1.2 问题二")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("Question 2")]),s._v(" "),a("p",[s._v("写一个“标准”宏MIN，这个宏输入两个参数并返回较小的一个")])]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token macro-name function"}},[s._v("MI")]),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("A，B"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("A"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" （B） "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" （A）"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("B"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")])])]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[a("p",[s._v("标识"),a("code",[s._v("#define")]),s._v("在宏中应用的基本知识。这是很重要的，因为直到嵌入（inline）操作符变为标准C的一部分，宏是方便产生嵌入代码的唯一方法，对于嵌入式系统来说，为了能达到要求的性能，嵌入代码经常是必须的方法")])]),s._v(" "),a("li",[a("p",[s._v("三重条件操作符的知识。这个操作符存在C语言中的原因是它使得编译器能产生比"),a("code",[s._v("if-then-else")]),s._v("更优化的代码，了解这个用法是很重要的")])]),s._v(" "),a("li",[a("p",[s._v("懂得在宏中小心地把"),a("strong",[s._v("参数用括号括起来")])])]),s._v(" "),a("li",[a("p",[s._v("我也用这个问题开始讨论宏的副作用，例如：当你写下面的代码时会发生什么事？")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[s._v("least "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("MIN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("p"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v("， b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("details",{staticClass:"custom-block details"},[a("summary",[s._v("Answer")]),s._v(" "),a("p",[s._v("编译后为"),a("code",[s._v("least = ((*p++) <= (b) ? (*p++) : (b))")])]),s._v(" "),a("p",[a("code",[s._v("*p")]),s._v("会自增两次")])])])]),s._v(" "),a("h3",{attrs:{id:"_1-3-问题三"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-问题三"}},[s._v("#")]),s._v(" 1.3 问题三")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("Question 3")]),s._v(" "),a("p",[s._v("预处理器标识"),a("code",[s._v("#error")]),s._v("的目的是什么？")])]),s._v(" "),a("p",[s._v("如果你不知道答案，请看参考文献1。这问题对区分一个正常的伙计和一个书呆子是很有用的。只有书呆子才会读C语言课本的附录去找出像这种问题的答案。当然如果你不是在找一个书呆子，那么应试者最好希望自己不要知道答案。")]),s._v(" "),a("h2",{attrs:{id:"_2-0-死循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-0-死循环"}},[s._v("#")]),s._v(" 2.0 死循环")]),s._v(" "),a("h3",{attrs:{id:"_2-1-问题四"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-问题四"}},[s._v("#")]),s._v(" 2.1 问题四")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("Question 4")]),s._v(" "),a("p",[s._v("嵌入式系统中经常要用到无限循环，你怎么样用C编写死循环呢？")])]),s._v(" "),a("p",[s._v("这个问题有几个解决方案。我首选的方案是：")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// loop")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("一些程序员更喜欢如下方案：")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// loop")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("这个实现方式让我为难，因为这个语法没有确切表达到底怎么回事。如果一个应试者给出这个作为方案，我将用这个作为一个机会去探究他们这样做的基本原理。如果他们的基本答案是：“我被教着这样做，但从没有想到过为什么。”这会给我留下一个坏印象")]),s._v(" "),a("p",[s._v("第三个方案是用 "),a("code",[s._v("goto")])]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[s._v("Loop"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// loop")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("goto")]),s._v(" Loop"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("应试者如给出上面的方案，这说明或者他是一个汇编语言程序员（这也许是好事），或者他是一个想进入新领域的BASIC/FORTRAN程序员。")]),s._v(" "),a("h2",{attrs:{id:"_3-0-数据声明-data-declarations"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-0-数据声明-data-declarations"}},[s._v("#")]),s._v(" 3.0 数据声明 (Data declarations)")]),s._v(" "),a("h3",{attrs:{id:"_3-1-问题五"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-问题五"}},[s._v("#")]),s._v(" 3.1 问题五")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("Question 5")]),s._v(" "),a("p",[s._v("用变量"),a("code",[s._v("a")]),s._v("给出下面的定义：")]),s._v(" "),a("ol",[a("li",[s._v("一个整型数（An integer）")]),s._v(" "),a("li",[s._v("一个指向整型数的指针（A pointer to an integer）")]),s._v(" "),a("li",[s._v("一个指向指针的的指针，它指向的指针是指向一个整型数（A pointer to a pointer to an integer）")]),s._v(" "),a("li",[s._v("一个有10个整型数的数组（An array of 10 integers）")]),s._v(" "),a("li",[s._v("一个有10个指针的"),a("strong",[s._v("数组")]),s._v("，该指针是指向一个整型数的（An array of 10 pointers to integers）")]),s._v(" "),a("li",[s._v("一个指向有10个整型数数组的"),a("strong",[s._v("指针")]),s._v("（A pointer to an array of 10 integers）")]),s._v(" "),a("li",[s._v("一个指向函数的"),a("strong",[s._v("指针")]),s._v("，该函数有一个整型参数并返回一个整型数（A pointer to a function that takes an integer as an argument and returns an integer）")]),s._v(" "),a("li",[s._v("一个有10个指针的"),a("strong",[s._v("数组")]),s._v("，该指针指向一个函数，该函数有一个整型参数并返回一个整型数（An array of ten pointers to functions that take an integer argument and return an integer）")])])]),s._v(" "),a("p",[s._v("答案是：")]),s._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[s._v("Answer")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// An integer")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// A pointer to an integer ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// A pointer to a pointer to an integer")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// An array of 10 integers")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// An array of 10 pointers to integers")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// A pointer to an array of 10 integers")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// A pointer to a function a that takes an integer argument and returns an integer")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// An array of 10 pointers to functions that take an integer argument and return an integer")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])])]),s._v(" "),a("p",[s._v("人们经常声称这里有几个问题是那种"),a("strong",[s._v("要翻一下书才能回答的问题")]),s._v("，我同意这种说法。当我写这篇文章时，为了确定语法的正确性，我的确查了一下书。")]),s._v(" "),a("p",[s._v("但是当我被面试的时候，我期望被问到这个问题（或者相近的问题）。因为在被面试的这段时间里，我确定我知道这个问题的答案。应试者如果不知道所有的答案（或至少大部分答案），那么也就没有为这次面试做准备，如果该面试者没有为这次面试做准备，那么他又能为什么准备呢？")]),s._v(" "),a("h2",{attrs:{id:"_4-0-static"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-0-static"}},[s._v("#")]),s._v(" 4.0 Static")]),s._v(" "),a("h3",{attrs:{id:"_4-1-问题六"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-问题六"}},[s._v("#")]),s._v(" 4.1 问题六")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("Question 6")]),s._v(" "),a("p",[s._v("关键字"),a("code",[s._v("static")]),s._v("的作用是什么？")])]),s._v(" "),a("p",[s._v("这个简单的问题很少有人能回答完全。在C语言中，关键字static有三个明显的作用：")]),s._v(" "),a("ul",[a("li",[s._v("在函数体，一个被声明为静态的变量在这一函数被调用过程中维持其值不变")]),s._v(" "),a("li",[s._v("在模块内（但在函数体外），一个被声明为静态的变量可以被模块内所用函数访问，但不能被模块外其它函数访问。它是一个本地的全局变量")]),s._v(" "),a("li",[s._v("在模块内，一个被声明为静态的函数只可被这一模块内的其它函数调用。那就是，这个函数被限制在声明它的模块的本地范围内使用。")])]),s._v(" "),a("p",[s._v("大多数应试者能正确回答第一部分，一部分能正确回答第二部分，同是很少的人能懂得第三部分。这是一个应试者的严重的缺点，因为他显然不懂得本地化数据和代码范围的好处和重要性。详情请参考"),a("a",{attrs:{href:"https://blog.csdn.net/guotianqing/article/details/79828100",target:"_blank",rel:"noopener noreferrer"}},[s._v("这篇文章"),a("OutboundLink")],1)]),s._v(" "),a("h2",{attrs:{id:"_5-0-const"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-0-const"}},[s._v("#")]),s._v(" 5.0 Const")]),s._v(" "),a("h3",{attrs:{id:"_5-1-问题七"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-问题七"}},[s._v("#")]),s._v(" 5.1 问题七")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("Question 7")]),s._v(" "),a("p",[s._v("关键字"),a("code",[s._v("const")]),s._v("是什么含意？")])]),s._v(" "),a("p",[s._v('我只要一听到被面试者说："'),a("code",[s._v("const")]),s._v('意味着常数" ，我就知道我正在和一个业余者打交道。去年Dan Saks已经在他的文章里完全概括了'),a("code",[s._v("const")]),s._v("的所有用法，因此ESP（译者：Embedded Systems Programming）的每一位读者应该非常熟悉"),a("code",[s._v("const")]),s._v("能做什么和不能做什么。如果你从没有读到那篇文章，只要能说出"),a("code",[s._v("const")]),s._v("意味着“"),a("strong",[s._v("只读")]),s._v("”就可以了。尽管这个答案不是完全的答案，但我接受它作为一个正确的答案。（如果你想知道更详细的答案，仔细读一下"),a("a",{attrs:{href:"https://www.dansaks.com/articles/1998-08%20What%20const%20Really%20Means.pdf",target:"_blank",rel:"noopener noreferrer"}},[s._v("Saks的文章"),a("OutboundLink")],1),s._v("吧）")]),s._v(" "),a("p",[s._v("如果应试者能正确回答这个问题，我将问他一个附加的问题：下面的声明都是什么意思？")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("ul",[a("li",[s._v("前两个的作用是一样：a 是一个常整型数")]),s._v(" "),a("li",[s._v("第三个意味着 a 是一个指向常整型数的"),a("strong",[s._v("指针")]),s._v("（也就是，整型数是不可修改的，但指针可以）")]),s._v(" "),a("li",[s._v("第四个意思 a 是一个指向整型数的"),a("strong",[s._v("常指针")]),s._v("（也就是说，指针指向的整型数是可以修改的，但指针是不可修改的）")]),s._v(" "),a("li",[s._v("第五个意味着a是一个"),a("strong",[s._v("指向常整型数的常指针")]),s._v("（也就是说，指针指向的整型数是不可修改的，同时指针也是不可修改的）")])]),s._v(" "),a("p",[s._v("如果应试者能正确回答这些问题，那么他就给我留下了一个好印象。顺带提一句，也许你可能会问，即使不用关键字"),a("code",[s._v("const")]),s._v("，也还是能很容易写出功能正确的程序，那么我为什么还要如此看重关键字"),a("code",[s._v("const")]),s._v("呢？我也如下的几下理由：")]),s._v(" "),a("ol",[a("li",[s._v("关键字"),a("code",[s._v("const")]),s._v("的作用是为给读你代码的人传达非常有用的信息，实际上，声明一个参数为常量是为了告诉用户这个参数的应用目的。如果你曾花很多时间清理其它人留下的垃圾，你就会很快学会感谢这点多余的信息。（当然，懂得用"),a("code",[s._v("const")]),s._v("的程序员很少会留下垃圾让别人来清理的）")]),s._v(" "),a("li",[s._v("通过给优化器一些附加的信息，使用关键字"),a("code",[s._v("const")]),s._v("也许能产生更紧凑的代码")]),s._v(" "),a("li",[s._v("合理地使用关键字"),a("code",[s._v("const")]),s._v("可以使编译器很自然地保护那些不希望被改变的参数，防止其被无意的代码修改。简而言之，这样可以减少bug的出现")])]),s._v(" "),a("h2",{attrs:{id:"_6-0-volatile"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-0-volatile"}},[s._v("#")]),s._v(" 6.0 Volatile")]),s._v(" "),a("h3",{attrs:{id:"_6-1-问题八"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-问题八"}},[s._v("#")]),s._v(" 6.1 问题八")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("Question 8")]),s._v(" "),a("p",[s._v("关键字"),a("code",[s._v("volatile")]),s._v("有什么含意？并给出三个不同的例子。")])]),s._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[s._v("volatile 关键字")]),s._v(" "),a("blockquote",[a("p",[s._v("此部分内容转载自 C 语言网")])]),s._v(" "),a("p",[a("code",[s._v("volatile")]),s._v(" 是易变的、不稳定的意思。很多人根本就没见过这个关键字，不知道它的存在。也有很多程序员知道它的存在，但从来没用过它。我对它有种“杨家有女初长成,养在深闺人未识” 的感觉。")]),s._v(" "),a("p",[a("code",[s._v("volatile")]),s._v(" 关键字和"),a("code",[s._v("const")]),s._v("一样是一种类型修饰符，用它修饰的变量表示可以被某些编译器未知的因素更改，比如操作系统、硬件或者其它线程等。遇到这个关键字声明的变量，编译器对访问该变量的代码就不再进行优化，从而可以提供对特殊地址的稳定访问。")]),s._v(" "),a("p",[s._v("先看看下面的例子：")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" i； "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//(1)语句  ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" k "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" i； "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//(2)语句")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("这时候编译器对代码进行优化，因为在 (1)、(2) 两条语句中，"),a("code",[s._v("i")]),s._v("没有被用作左值。这时候编译器认为"),a("code",[s._v("i")]),s._v(" 的值没有发生改变，所以在 (1) 语句时从内存中取出"),a("code",[s._v("i")]),s._v(" 的值赋给"),a("code",[s._v("j")]),s._v(" 之后，这个值并没有被丢掉，而是在 (2) 语句时继续用这个值给"),a("code",[s._v("k")]),s._v("赋值。编译器不会生成出汇编代码重新从内存里取"),a("code",[s._v("i")]),s._v("的值，这样提高了效率。但要注意：(1)、(2) 语句之间"),a("code",[s._v("i")]),s._v("没有被用作左值才行")]),s._v(" "),a("p",[s._v("再看另一个例子：")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("volatile")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  \n "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" i；"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//(3)语句  ")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" k "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" i；"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//(4)语句  ")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[a("code",[s._v("volatile")]),s._v(" 关键字告诉编译器i 是随时可能发生变化的，每次使用它的时候必须从内存中取出i的值，因而编译器生成的汇编代码会重新从i 的地址处读取数据放在k 中。")]),s._v(" "),a("p",[s._v("这样看来，如果i 是一个寄存器变量或者表示一个端口数据或者是多个线程的共享数据，就容易出错，所以说"),a("code",[s._v("volatile")]),s._v(" 可以保证对特殊地址的稳定访问。")]),s._v(" "),a("p",[s._v("但是注意：在VC++6.0 中，一般Debug 模式没有进行代码优化，所以这个关键字的作用有可能看不出来。你可以同时生成Debug 版和Release 版的程序做个测试。")]),s._v(" "),a("p",[s._v("留一个问题："),a("code",[s._v("const volatile int i=10")]),s._v("；这行代码有没有问题？如果没有，那"),a("code",[s._v("i")]),s._v(" 到底是什么属性？")])]),s._v(" "),a("p",[s._v("一个定义为"),a("code",[s._v("volatile")]),s._v("的变量是说这变量可能会被意想不到地改变，这样，编译器就不会去假设这个变量的值了。精确地说就是，优化器在用到这个变量时必须每次都小心地重新读取这个变量的值，而不是使用保存在寄存器里的备份。下面是"),a("code",[s._v("volatile")]),s._v("变量的几个例子：")]),s._v(" "),a("ul",[a("li",[s._v("并行设备的硬件寄存器（如：状态寄存器）")]),s._v(" "),a("li",[s._v("一个中断服务子程序中会访问到的非自动变量（Non-automatic variables）")]),s._v(" "),a("li",[s._v("多线程应用中被几个任务共享的变量")])]),s._v(" "),a("p",[s._v("回答不出这个问题的人是不会被雇佣的。我认为这是区分"),a("strong",[s._v("C程序员")]),s._v("和"),a("strong",[s._v("嵌入式系统程序员")]),s._v("的最基本的问题。嵌入式系统程序员经常同硬件、中断、RTOS等等打交道，所用这些都要求"),a("code",[s._v("volatile")]),s._v("变量。不懂得"),a("code",[s._v("volatile")]),s._v("内容将会带来灾难。假设被面试者正确地回答了这是问题（嗯，怀疑这否会是这样），我将稍微深究一下，看一下这家伙是不是直正懂得"),a("code",[s._v("volatile")]),s._v("完全的重要性：")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("一个参数既可以是"),a("code",[s._v("const")]),s._v("还可以是"),a("code",[s._v("volatile")]),s._v("吗？解释为什么")])]),s._v(" "),a("li",[a("p",[s._v("一个指针可以是"),a("code",[s._v("volatile")]),s._v(" 吗？解释为什么")])]),s._v(" "),a("li",[a("p",[s._v("下面的函数有什么错误：")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("square")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("volatile")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("ptr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("ptr "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("ptr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])])])]),s._v(" "),a("p",[s._v("下面是答案：")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("是的。一个例子是只读的状态寄存器。它是"),a("code",[s._v("volatile")]),s._v("因为它可能被意想不到地改变。它是"),a("code",[s._v("const")]),s._v("因为程序不应该试图去修改它")])]),s._v(" "),a("li",[a("p",[s._v("是的。尽管这并不很常见。例子是当一个中服务子程序修改一个指向"),a("code",[s._v("buffer")]),s._v("的指针时")])]),s._v(" "),a("li",[a("p",[s._v("这段代码的有个恶作剧。这段代码的目的是用来返指针"),a("code",[s._v("*ptr")]),s._v("指向值的平方，但是，由于"),a("code",[s._v("*ptr")]),s._v("指向一个"),a("code",[s._v("volatile")]),s._v("型参数，编译器将产生类似下面的代码：")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("square")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("volatile")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("ptr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a，b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("ptr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    b "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("ptr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("由于"),a("code",[s._v("*ptr")]),s._v("的值可能被意想不到地该变，因此a和b可能是不同的。结果，这段代码可能返不是你所期望的平方值！正确的代码如下：")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("square")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("volatile")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("ptr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("ptr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])])])]),s._v(" "),a("h3",{attrs:{id:"_6-2-问题九"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-问题九"}},[s._v("#")]),s._v(" 6.2 问题九")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("Question 9")]),s._v(" "),a("p",[s._v("嵌入式系统总是要用户对变量或寄存器进行位操作。给定一个整型变量 a ，写两段代码：第一个设置 a 的 bit 3，第二个清除 a 的 bit 3。")]),s._v(" "),a("p",[s._v("在以上两个操作中，要保持其它位不变。")])]),s._v(" "),a("p",[s._v("对这个问题有三种基本的反应：")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("不知道如何下手。该被面者从没做过任何嵌入式系统的工作")])]),s._v(" "),a("li",[a("p",[s._v("用 "),a("code",[s._v("bit fields")]),s._v("。"),a("code",[s._v("bit fields")]),s._v("是被扔到 C 语言死角的东西，它保证你的代码在不同编译器之间是不可移植的，同时也保证了的你的代码是不可重用的。我最近不幸看到 Infineon 为其较复杂的通信芯片写的驱动程序，它用到了"),a("code",[s._v("bit fields")]),s._v("因此完全对我无用，因为我的编译器用其它的方式来实现"),a("code",[s._v("bit fields")]),s._v("的。从道德讲：永远不要让一个非嵌入式的家伙粘实际硬件的边")])]),s._v(" "),a("li",[a("p",[s._v("用 "),a("code",[s._v("#defines")]),s._v(" 和 "),a("code",[s._v("bit masks")]),s._v(" 操作。这是一个有极高可移植性的方法，是应该被用到的方法。最佳的解决方案如下：")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token macro-name"}},[s._v("BIT3")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")])])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("set_bit3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|=")]),s._v(" BIT3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("clear_bit3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),s._v("BIT3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])])])]),s._v(" "),a("p",[s._v("一些人喜欢为设置和清除值而定义一个掩码同时定义一些说明常数，这也是可以接受的。我希望看到几个要点：说明常数、"),a("code",[s._v("|=")]),s._v("和"),a("code",[s._v("&=~")]),s._v("操作")]),s._v(" "),a("h2",{attrs:{id:"_7-0-访问固定的内存位置-accessing-fixed-memory-locations"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-0-访问固定的内存位置-accessing-fixed-memory-locations"}},[s._v("#")]),s._v(" 7.0 访问固定的内存位置（Accessing fixed memory locations）")]),s._v(" "),a("h3",{attrs:{id:"_7-1-问题十"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-问题十"}},[s._v("#")]),s._v(" 7.1 问题十")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("Question 10")]),s._v(" "),a("p",[s._v("嵌入式系统经常具有要求程序员去访问某特定的内存位置的特点。在某工程中，要求设置一绝对地址为"),a("code",[s._v("0x67a9")]),s._v("的整型变量的值为"),a("code",[s._v("0xaa66")]),s._v("。编译器是一个纯粹的 ANSI 编译器。写代码去完成这一任务。")])]),s._v(" "),a("p",[s._v("这一问题测试你是否知道为了访问一个绝对地址把一个整型数强制转换（typecast）为一指针是合法的。这一问题的实现方式随着个人风格不同而不同。典型的类似代码如下：")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("ptr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nptr "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x67a9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("ptr "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0xaa55")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("一个较晦涩的方法是：")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x67a9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0xaa55")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("即使你的品味更接近第二种方案，但我建议你在面试时使用第一种方案。")]),s._v(" "),a("h2",{attrs:{id:"_8-0-中断-interrupts"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-0-中断-interrupts"}},[s._v("#")]),s._v(" 8.0 中断（Interrupts）")]),s._v(" "),a("h3",{attrs:{id:"_8-1-问题十一"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-1-问题十一"}},[s._v("#")]),s._v(" 8.1 问题十一")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("Question 11")]),s._v(" "),a("p",[s._v("中断是嵌入式系统中重要的组成部分，这导致了很多编译开发商提供一种扩展——让标准C支持中断。具代表事实是，产生了一个新的关键字"),a("code",[s._v("__interrupt")]),s._v("。下面的代码就使用了"),a("code",[s._v("__interrupt")]),s._v("关键字去定义了一个中断服务子程序（ISR），请评论一下这段代码。")])]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[s._v("__interrupt "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("compute_area")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v(" radius"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v(" area "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" PI "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" radius "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" radius"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("“ Area "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v("f”， area"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" area"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("这个函数有太多的错误了，以至让人不知从何说起了：")]),s._v(" "),a("ol",[a("li",[s._v("ISR 不能返回一个值。如果你不懂这个，那么你不会被雇用的")]),s._v(" "),a("li",[s._v("ISR 不能传递参数。如果你没有看到这一点，你被雇用的机会等同第一项")]),s._v(" "),a("li",[s._v("在许多的处理器/编译器中，浮点一般都是不可重入的。有些处理器/编译器需要让额处的寄存器入栈，有些处理器/编译器就是不允许在ISR中做浮点运算。此外，ISR应该是短而有效率的，在ISR中做浮点运算是不明智的")]),s._v(" "),a("li",[s._v("与第三点一脉相承，"),a("code",[s._v("printf()")]),s._v("经常有重入和性能上的问题。如果你丢掉了第三和第四点，我不会太为难你的。不用说，如果你能得到后两点，那么你的被雇用前景越来越光明了。")])]),s._v(" "),a("h2",{attrs:{id:"_9-0-代码例子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-0-代码例子"}},[s._v("#")]),s._v(" 9.0 代码例子")]),s._v(" "),a("h3",{attrs:{id:"_9-1-问题十二"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-1-问题十二"}},[s._v("#")]),s._v(" 9.1 问题十二")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("Question 12")]),s._v(" "),a("p",[s._v("下面的代码输出是什么，为什么？")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("b "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("puts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"> 6"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("puts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<= 6"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])])]),s._v(" "),a("p",[s._v("这个问题测试你是否懂得C语言中的整数自动转换原则，我发现有些开发者懂得极少这些东西。")]),s._v(" "),a("p",[s._v("不管如何，这无符号整型问题的答案是输出是 "),a("code",[s._v(">6")]),s._v("。原因是当表达式中存在有符号类型和无符号类型时所有的操作数都自动转换为无符号类型。因此 -20 变成了一个非常大的正整数，所以该表达式计算出的结果大于 6。这一点对于应当频繁用到无符号数据类型的嵌入式系统来说是丰常重要的。如果你答错了这个问题，你也就到了得不到这份工作的边缘。")]),s._v(" "),a("h3",{attrs:{id:"_9-2-问题十三"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-2-问题十三"}},[s._v("#")]),s._v(" 9.2 问题十三")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("Question 13")]),s._v(" "),a("p",[s._v("评价下面的代码片断：")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" zero "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" compzero "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0xFFFF")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*1‘s complement of zero */")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])])]),s._v(" "),a("p",[s._v("对于一个int型不是16位的处理器为说，上面的代码是不正确的。应编写如下：")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" compzero "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("这一问题真正能揭露出应试者是否懂得处理器字长的重要性。在我的经验里，好的嵌入式程序员非常准确地明白硬件的细节和它的局限，然而 PC 机程序往往把硬件作为一个无法避免的烦恼。 到了这个阶段，应试者或者完全垂头丧气了或者信心满满志在必得。如果显然应试者不是很好，那么这个测试就在这里结束了。但如果显然应试者做得不错，那么我就扔出下面的追加问题，这些问题是比较难的，我想仅仅非常优秀的应试者能做得不\n错。提出这些问题，我希望更多看到应试者应付问题的方法，而不是答案。不管如何，你就当是这个娱乐吧…")]),s._v(" "),a("h2",{attrs:{id:"_10-0-动态内存分配-dynamic-memory-allocation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-0-动态内存分配-dynamic-memory-allocation"}},[s._v("#")]),s._v(" 10.0 动态内存分配（Dynamic memory allocation）")]),s._v(" "),a("h3",{attrs:{id:"_10-1-问题十四"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-1-问题十四"}},[s._v("#")]),s._v(" 10.1 问题十四")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("Question 14")]),s._v(" "),a("p",[s._v("尽管不像非嵌入式计算机那么常见，嵌入式系统还是有从堆（heap）中动态分配内存的过程的。那么嵌入式系统中，动态分配内存可能发生的问题是什么？")])]),s._v(" "),a("p",[s._v("这里，我期望应试者能提到内存碎片，碎片收集的问题，变量的持行时间等等。这个主题已经在 ESP 杂志中被广泛地讨论过了（主要是 P.J. Plauger， 他的解释远远超过我这里能提到的任何解释），所有回过头看一下这些杂志吧！让应试者进入一种虚假的安全感觉后，我拿出这么一个小节目：下面的代码片段的输出是什么，为什么？")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("ptr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ptr "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("malloc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("puts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("“Got a null pointer”"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" \n    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("puts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("“Got a valid pointer”"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("这是一个有趣的问题。最近在我的一个同事不经意把0值传给了函数"),a("code",[s._v("malloc")]),s._v("，得到了一个合法的指针之后，我才想到这个问题。这就是上面的代码，该代码的输出是“Got a valid pointer”。我用这个来开始讨论这样的一问题，看看被面试者是否想到库例程这样做是正确。得到正确的答案固然重要，但解决问题的方法和你做决定的基本原理更重要些。")]),s._v(" "),a("h2",{attrs:{id:"_11-0-typedef"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-0-typedef"}},[s._v("#")]),s._v(" 11.0 Typedef")]),s._v(" "),a("h3",{attrs:{id:"_11-1-问题十五"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-1-问题十五"}},[s._v("#")]),s._v(" 11.1 问题十五")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("Question 15")]),s._v(" "),a("p",[a("code",[s._v("typedef")]),s._v("在C语言中频繁用以声明一个已经存在的数据类型的同义字。也可以用预处理器做类似的事。例如，思考一下下面的例子：")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token macro-name"}},[s._v("dPS")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("s")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")])])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typedef")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("s")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" tPS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])]),s._v(" "),a("p",[s._v("以上两种情况的意图都是要定义"),a("code",[s._v("dPS")]),s._v(" 和 "),a("code",[s._v("tPS")]),s._v(" 作为一个指向结构"),a("code",[s._v("s")]),s._v("指针。哪种方法更好呢？（如果有的话）为什么？这是一个非常微妙的问题，任何人答对这个问题（正当的原因）是应当被恭喜的。答案是："),a("code",[s._v("typedef")]),s._v("更好。思考下面的例子：")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[s._v("dPS p1，p2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\ntPS p3，p4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("第一个扩展为"),a("code",[s._v("struct s * p1, p2;")]),s._v(" 上面的代码定义"),a("code",[s._v("p1")]),s._v("为一个指向结构的指，"),a("code",[s._v("p2")]),s._v("为一个实际的结构，这也许不是你想要的。第二个例子正确地定义了"),a("code",[s._v("p3")]),s._v(" 和"),a("code",[s._v("p4")]),s._v(" 两个指针。")]),s._v(" "),a("h2",{attrs:{id:"_12-0-晦涩的语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12-0-晦涩的语法"}},[s._v("#")]),s._v(" 12.0 晦涩的语法")]),s._v(" "),a("h3",{attrs:{id:"_12-1-问题十六"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12-1-问题十六"}},[s._v("#")]),s._v(" 12.1 问题十六")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("Question 16")]),s._v(" "),a("p",[s._v("C语言同意一些令人震惊的结构，下面的结构是合法的吗，如果是它做些什么？")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nc "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" a"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])]),s._v(" "),a("p",[s._v("这个问题将做为这个测验的一个愉快的结尾。不管你相不相信，上面的例子是完全合乎语法的。问题是编译器如何处理它？水平不高的编译作者实际上会争论这个问题，根据最处理原则，编译器应当能处理尽可能所有合法的用法。因此，上面的代码被处理成：")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[s._v("c "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" a"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("因此，这段代码持行后"),a("code",[s._v("a = 6， b = 7， c = 12")])]),s._v(" "),a("p",[s._v("各位工程师们，做完这些测试有什么感受呢？是否能够得心应手呢，希望你们在将来都能成为出色的工程师")])])}),[],!1,null,null,null);t.default=e.exports}}]);