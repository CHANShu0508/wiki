(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{463:function(s,t,a){"use strict";a.r(t);var n=a(20),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"外部中断"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#外部中断"}},[s._v("#")]),s._v(" 外部中断")]),s._v(" "),a("p",[s._v("在前面我们学过了由定时器引发的中断，这是由定时器的一系列现象引发的中断。而今天的外部中断则是由我们自定义的现象引发的中断")]),s._v(" "),a("h3",{attrs:{id:"按钮"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#按钮"}},[s._v("#")]),s._v(" 按钮")]),s._v(" "),a("p",[s._v("首先先来了解一下按钮，这种元件通过上拉电阻与接地，可以在未按下与按下的时候向引脚输入高电平与低电平。利用外部中断可以被电平的上升或下降沿（或者二者都）引发，我们可以将按下或者松开按钮的电平变化设为外部中断的来源。")]),s._v(" "),a("h3",{attrs:{id:"抖动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#抖动"}},[s._v("#")]),s._v(" 抖动")]),s._v(" "),a("p",[s._v("但是不得不提到的是由于按键的机械结构具有弹性，按下时开关不会立刻接通，断开时也不会立刻断开，这就导致按键的输入信号在按下和断开时都会存在抖动，如果不先将抖动问题进行处理，则读取的按键信号可能会出现错误")]),s._v(" "),a("p",[s._v("为了消除这一问题，可以通过软件消抖和硬件消抖两种方式来实现。这里我们使用软件滤波的实现方法。软件滤波的思想非常简单，抖动产生在按键按下和松开的两个边沿时刻，也叫下降沿（电平从高到低）和上升沿（电平从低到高）时刻，所以只需要"),a("strong",[s._v("在边沿时进行延时")]),s._v("，等到按键输入已经稳定再进行信号读取即可。\n一般采用软件消抖时，会进行"),a("strong",[s._v("20ms的延时")]),s._v("，示波器采集按键波形如图所示：")]),s._v(" "),a("div",{staticStyle:{zoom:"75%"},attrs:{align:"center"}},[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/CHANShu0508/images_shack/images/20200826160016.jpg"}})]),s._v(" "),a("h3",{attrs:{id:"外部中断的核心思想"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#外部中断的核心思想"}},[s._v("#")]),s._v(" 外部中断的核心思想")]),s._v(" "),a("p",[s._v("外部中断是典型的“前后台模式”程序。在后台，也就是"),a("code",[s._v("while(1)")]),s._v("中，我们实现着有条不紊的普通工作；在前台，程序会接受中断的信号，一旦有中断发生，后台的精力将会转到前台处理中断")]),s._v(" "),a("p",[s._v("所以根据二者的特性，在编写前后台程序时，需要注意尽量避免在前台程序中执行过长或者过于耗时的代码，让前台程序能够尽快执行完毕，以保证其能够实时响应突发的事件，比较繁杂和耗时的任务一般放在后台程序中处理")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th"),s._v(" "),a("th",[s._v("前台程序")]),s._v(" "),a("th",[s._v("后台程序")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("运行方式")]),s._v(" "),a("td",[s._v("中断")]),s._v(" "),a("td",[s._v("循环")])]),s._v(" "),a("tr",[a("td",[s._v("处理的任务类型")]),s._v(" "),a("td",[s._v("突发型任务")]),s._v(" "),a("td",[s._v("重复型任务")])]),s._v(" "),a("tr",[a("td",[s._v("任务的特点")]),s._v(" "),a("td",[s._v("任务轻，要求响应及时")]),s._v(" "),a("td",[s._v("任务重，稳定执行")])])])]),s._v(" "),a("h2",{attrs:{id:"实践配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实践配置"}},[s._v("#")]),s._v(" 实践配置")]),s._v(" "),a("h3",{attrs:{id:"cubemx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cubemx"}},[s._v("#")]),s._v(" CubeMX")]),s._v(" "),a("p",[s._v("首先将连接着按键的 PA0 引脚设为外部中断模式：")]),s._v(" "),a("div",{attrs:{align:"center"}},[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/CHANShu0508/images_shack/images/20200826161548.png"}})]),s._v(" "),a("p",[s._v("随后将 LED 的三个引脚设为输出模式")]),s._v(" "),a("p",[s._v("接着进入 GPIO 标签，将 PA0 引脚的外部中断参数改为上升与下降沿均可引发中断。且设置为上拉模式（上拉最为常用且在此处可以加强上拉的程度），还可以改一个标签名：")]),s._v(" "),a("div",{attrs:{align:"center"}},[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/CHANShu0508/images_shack/images/20200826161732.png"}})]),s._v(" "),a("p",[s._v("最后，在 NVIC 标签中允许"),a("strong",[s._v("0号线")]),s._v("的外部中断发生，随后配置时钟等要素，生成代码：")]),s._v(" "),a("div",{attrs:{align:"center"}},[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/CHANShu0508/images_shack/images/20200826161944.png"}})]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("外部中断的线")]),s._v(" "),a("p",[s._v("在 STM32 中，每一个 GPIO 都可以作为外部中断的触发源，外部中断一共有16条线，对应着 GPIO 的0-15引脚，每一条外部中断都可以与任意一组的对应引脚相连，但不能重复使用。例如外部中断 Line0 可以和 PA0，PB0，PC0 等任意一条0号引脚相连，但如果已经和PA0相连，就不能同时和 PB0，PC0 其他引脚相连")])]),s._v(" "),a("h3",{attrs:{id:"工程代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#工程代码"}},[s._v("#")]),s._v(" 工程代码")]),s._v(" "),a("p",[s._v("在文件"),a("code",[s._v("stm32f4xx_it.c")]),s._v("中，可以看到自动生成的函数"),a("code",[s._v("EXTI0_IRQHandler")]),s._v("，它通过调用函数"),a("code",[s._v("HAL_GPIO_EXTI_IRQHandler")]),s._v("对中断类型进行判断，并对涉及中断的寄存器进行处理，在处理完成后，它将调用中断回调函数"),a("code",[s._v("HAL_GPIO_EXTI_Callback")]),s._v("，在中断回调函数中编写在此次中断中需要执行的功能")]),s._v(" "),a("p",[s._v("所以回调函数"),a("code",[s._v("HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)")]),s._v("就是我们需要在"),a("code",[s._v("main.c")]),s._v("中重新定义的，执行中断操作的函数，系统为它传入的参数就是外部中断发生的组号")]),s._v(" "),a("p",[s._v("在介绍主要程序之前，我们需要先了解读取引脚高低电平的函数"),a("code",[s._v("HAL_GPIO_ReadPin()")]),s._v("，它的两个参数分别是引脚所在的 GPIO 总线（A~H），第二个参数是引脚号，详细信息请见"),a("RouterLink",{attrs:{to:"/pages/67ee08/#hal-gpio-readpin"}},[s._v("这里")])],1),s._v(" "),a("p",[s._v("下面就介绍主要程序的防抖、防误触与中断程序。主要是通过一个在中断发生与检测过程中定义的"),a("strong",[s._v("标志位")]),s._v("与"),a("strong",[s._v("延时")]),s._v("完成的：")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("uint8_t")]),s._v(" exit_flag "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("uint8_t")]),s._v(" rising_falling_flag"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n  * @brief          外部中断回调\n  * @param[in]      GPIO_Pin:引脚号\n  * @retval         none\n  */")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("HAL_GPIO_EXTI_Callback")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("uint16_t")]),s._v(" GPIO_Pin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("GPIO_Pin "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" KEY_Pin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("exit_flag "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            exit_flag "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            rising_falling_flag "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("HAL_GPIO_ReadPin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("KEY_GPIO_Port"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" KEY_Pin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br")])]),a("p",[s._v("这是中断的返回函数，首先定义的两个变量"),a("code",[s._v("exit_flag")]),s._v("与"),a("code",[s._v("rising_falling_flag")]),s._v("分别是中断的阶段的标志位与记录上升沿还是下降沿以判断进行何种操作的变量")]),s._v(" "),a("p",[s._v("在检测到有电平发生变化时，系统跳转到到回调函数之后，首先会检测其发生的组号是否为设定的组号，以防止其他电平信号干扰。随后如果发现"),a("code",[s._v("exit_flag")]),s._v("的值为 "),a("strong",[s._v("0")]),s._v("，即中断还未发生的时候，就将这个标志位改为 "),a("strong",[s._v("1")]),s._v("，代表正在延时检测是否真的是人按下了按钮而不是电平扰动，最后先读取一下诱发中断的信号目前是高电平还是低电平，记录在"),a("code",[s._v("rising_falling_flag")]),s._v("中，随后转入主循环进一步检测")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("exit_flag "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        exit_flag "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("rising_falling_flag "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" GPIO_PIN_RESET"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//消抖")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("HAL_Delay")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("HAL_GPIO_ReadPin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("KEY_GPIO_Port"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" KEY_Pin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" GPIO_PIN_RESET"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("HAL_GPIO_WritePin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("LED_G_GPIO_Port"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" LED_G_Pin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" GPIO_PIN_SET"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                exit_flag "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                exit_flag "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("rising_falling_flag "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" GPIO_PIN_SET"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//消抖")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("HAL_Delay")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("HAL_GPIO_ReadPin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("KEY_GPIO_Port"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" KEY_Pin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" GPIO_PIN_SET"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("HAL_GPIO_WritePin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("LED_G_GPIO_Port"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" LED_G_Pin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" GPIO_PIN_RESET"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                exit_flag "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                exit_flag "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br")])]),a("p",[s._v("回到主循环之后，先检测"),a("code",[s._v("exit_flag")]),s._v("是多少以确定刚刚的中断是不是由设定好的组的信号引发的，若是则将这个标志位改为 "),a("strong",[s._v("2")]),s._v("，代表正在进行最后的检测。随后查看刚刚的触发信号是高电平还是低电平，以进入不同的检测程序，但是二者的步骤相同：先延时 20ms，随后再检测一次目标引脚的电平是否保持一致，一致则执行设定好的操作（按下开灯，松开关灯）；不一致则无操作，但都要将"),a("code",[s._v("exit_flag")]),s._v("改回 "),a("strong",[s._v("0")]),s._v(" 以接收下一个中断")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("提示")]),s._v(" "),a("p",[s._v("第一次看的时候，会有种疑问："),a("code",[s._v("while(1)")]),s._v("中先把"),a("code",[s._v("exit_flag")]),s._v("改为2有用吗？")]),s._v(" "),a("p",[s._v("答案是有用。为了表示中断的检测到底进行到了哪一个阶段，便于在调试的时候查看")])]),s._v(" "),a("p",[s._v("完整代码请查看"),a("a",{attrs:{href:"https://github.com/RoboMaster/Development-Board-C-Examples/blob/master/6.key_exit/Src/main.c",target:"_blank",rel:"noopener noreferrer"}},[s._v("这里"),a("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=e.exports}}]);