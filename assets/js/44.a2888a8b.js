(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{454:function(t,s,a){"use strict";a.r(s);var n=a(20),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"时钟树设置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#时钟树设置"}},[t._v("#")]),t._v(" 时钟树设置")]),t._v(" "),a("h2",{attrs:{id:"时钟树"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#时钟树"}},[t._v("#")]),t._v(" 时钟树")]),t._v(" "),a("blockquote",[a("p",[t._v("基于 F4 系列分析")])]),t._v(" "),a("p",[t._v("这是 STM32 的时钟树：")]),t._v(" "),a("div",{attrs:{align:"center"}},[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/CHANShu0508/images_shack/images/20201116190251.png"}})]),t._v(" "),a("p",[t._v("STM32 的时钟来源主要有5个：HSI、HSE、LSI、LSE、PLL，它们究竟是什么请参考之前写过的"),a("RouterLink",{attrs:{to:"/pages/1c5e9d/#_1-3-时钟、复位与电源管理"}},[t._v("这个")]),t._v("，其中 PLL 分为主 PLL 与 专用 PLL，它也被列为高速时钟。")],1),t._v(" "),a("h2",{attrs:{id:"计算分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#计算分析"}},[t._v("#")]),t._v(" 计算分析")]),t._v(" "),a("h3",{attrs:{id:"pll分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pll分析"}},[t._v("#")]),t._v(" PLL分析")]),t._v(" "),a("p",[t._v("PLL 为锁相环倍频 输出。F4 系列有两个 PLL:")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("主 PLL(PLL)由 HSE 或者 HSI 提供时钟信号，并具有两个不同的输出时钟。")]),t._v(" "),a("p",[t._v("第一个输出\nPLLP 用于生成高速的系统时钟（最高 168MHz）")]),t._v(" "),a("p",[t._v("第二个输出\nPLLQ 用于生成 USB OTG FS 的时钟（48MHz），随机数发生器的时钟和 SDIO\n时钟。")])]),t._v(" "),a("li",[a("p",[t._v("专用 PLL(PLLI2S)用于生成精确时钟，从而在 I2S 接口实现高品质音频性能")])])]),t._v(" "),a("p",[t._v("对于主 PLL 我们可以分析一下，时钟信号是如何通过此处进行倍频的：")]),t._v(" "),a("div",{attrs:{align:"center"}},[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/CHANShu0508/images_shack/images/20201116191359.png"}})]),t._v(" "),a("p",[t._v("时钟信号进入 PLL 之前首先经过一个分频系数为 M 的分频器，随后经过 N 倍的倍频器之后，再次经过三个系数为分别为 P、Q、R 的分频器之后，输出最终的 PLL 时钟信号（分别为 PLLP、PLLQ 信号）")]),t._v(" "),a("blockquote",[a("p",[t._v("例如：令 M = 2，N = 8，P = 4，输入时钟信号为 24MHz。则输出将为：")]),t._v(" "),a("p"),a("p",[a("mjx-container",{staticClass:"MathJax",attrs:{jax:"SVG",display:"true"}},[a("svg",{staticStyle:{"vertical-align":"-1.552ex"},attrs:{xmlns:"http://www.w3.org/2000/svg",width:"39.801ex",height:"4.627ex",viewBox:"0 -1359 17592 2045"}},[a("g",{attrs:{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"matrix(1 0 0 -1 0 0)"}},[a("g",{attrs:{"data-mml-node":"math"}},[a("g",{attrs:{"data-mml-node":"mfrac"}},[a("g",{attrs:{"data-mml-node":"mrow",transform:"translate(220, 676)"}},[a("g",{attrs:{"data-mml-node":"mn"}},[a("path",{attrs:{"data-c":"32",d:"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"}}),a("path",{attrs:{"data-c":"34",d:"M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z",transform:"translate(500, 0)"}})]),a("g",{attrs:{"data-mml-node":"mi",transform:"translate(1000, 0)"}},[a("path",{attrs:{"data-c":"4D",d:"M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z"}})]),a("g",{attrs:{"data-mml-node":"mi",transform:"translate(2051, 0)"}},[a("path",{attrs:{"data-c":"48",d:"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"}})]),a("g",{attrs:{"data-mml-node":"mi",transform:"translate(2939, 0)"}},[a("path",{attrs:{"data-c":"7A",d:"M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"}})]),a("g",{attrs:{"data-mml-node":"mo",transform:"translate(3626.2, 0)"}},[a("path",{attrs:{"data-c":"D7",d:"M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"}})]),a("g",{attrs:{"data-mml-node":"mi",transform:"translate(4626.4, 0)"}},[a("path",{attrs:{"data-c":"4E",d:"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"}})])]),a("g",{attrs:{"data-mml-node":"mrow",transform:"translate(1465, -686)"}},[a("g",{attrs:{"data-mml-node":"mi"}},[a("path",{attrs:{"data-c":"4D",d:"M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z"}})]),a("g",{attrs:{"data-mml-node":"mo",transform:"translate(1273.2, 0)"}},[a("path",{attrs:{"data-c":"D7",d:"M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"}})]),a("g",{attrs:{"data-mml-node":"mi",transform:"translate(2273.4, 0)"}},[a("path",{attrs:{"data-c":"50",d:"M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"}})])]),a("rect",{attrs:{width:"5714.4",height:"60",x:"120",y:"220"}})]),a("g",{attrs:{"data-mml-node":"mo",transform:"translate(6232.2, 0)"}},[a("path",{attrs:{"data-c":"3D",d:"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"}})]),a("g",{attrs:{"data-mml-node":"mfrac",transform:"translate(7288, 0)"}},[a("g",{attrs:{"data-mml-node":"mrow",transform:"translate(220, 676)"}},[a("g",{attrs:{"data-mml-node":"mn"}},[a("path",{attrs:{"data-c":"32",d:"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"}}),a("path",{attrs:{"data-c":"34",d:"M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z",transform:"translate(500, 0)"}})]),a("g",{attrs:{"data-mml-node":"mi",transform:"translate(1000, 0)"}},[a("path",{attrs:{"data-c":"4D",d:"M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z"}})]),a("g",{attrs:{"data-mml-node":"mi",transform:"translate(2051, 0)"}},[a("path",{attrs:{"data-c":"48",d:"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"}})]),a("g",{attrs:{"data-mml-node":"mi",transform:"translate(2939, 0)"}},[a("path",{attrs:{"data-c":"7A",d:"M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"}})]),a("g",{attrs:{"data-mml-node":"mo",transform:"translate(3626.2, 0)"}},[a("path",{attrs:{"data-c":"D7",d:"M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"}})]),a("g",{attrs:{"data-mml-node":"mn",transform:"translate(4626.4, 0)"}},[a("path",{attrs:{"data-c":"38",d:"M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z"}})])]),a("g",{attrs:{"data-mml-node":"mrow",transform:"translate(1672, -686)"}},[a("g",{attrs:{"data-mml-node":"mn"}},[a("path",{attrs:{"data-c":"32",d:"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"}})]),a("g",{attrs:{"data-mml-node":"mo",transform:"translate(722.2, 0)"}},[a("path",{attrs:{"data-c":"D7",d:"M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"}})]),a("g",{attrs:{"data-mml-node":"mn",transform:"translate(1722.4, 0)"}},[a("path",{attrs:{"data-c":"34",d:"M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"}})])]),a("rect",{attrs:{width:"5326.4",height:"60",x:"120",y:"220"}})]),a("g",{attrs:{"data-mml-node":"mo",transform:"translate(13132.2, 0)"}},[a("path",{attrs:{"data-c":"3D",d:"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"}})]),a("g",{attrs:{"data-mml-node":"mn",transform:"translate(14188, 0)"}},[a("path",{attrs:{"data-c":"32",d:"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"}}),a("path",{attrs:{"data-c":"34",d:"M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z",transform:"translate(500, 0)"}})]),a("g",{attrs:{"data-mml-node":"mi",transform:"translate(15188, 0)"}},[a("path",{attrs:{"data-c":"4D",d:"M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z"}})]),a("g",{attrs:{"data-mml-node":"mi",transform:"translate(16239, 0)"}},[a("path",{attrs:{"data-c":"48",d:"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"}})]),a("g",{attrs:{"data-mml-node":"mi",transform:"translate(17127, 0)"}},[a("path",{attrs:{"data-c":"7A",d:"M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"}})])])])])])],1),a("p")]),t._v(" "),a("h3",{attrs:{id:"常用时钟"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用时钟"}},[t._v("#")]),t._v(" 常用时钟")]),t._v(" "),a("p",[t._v("A~G 为我们常用的时钟，5 个主要的时钟来源为他们提供信号，其中：")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("A")]),t._v(" 为这里是看门狗时钟输入。看门狗时钟源只能是低速的 LSI 时钟。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("B")]),t._v(" 为 RTC 时钟源，从图上可以看出，RTC 的时钟源可以选择 "),a("strong",[t._v("LSI")]),t._v("，"),a("strong",[t._v("LSE")]),t._v("，以及\n"),a("strong",[t._v("HSE 分频后的时钟")]),t._v("，HSE 分频系数为 2~31")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("C")]),t._v(" 为输出时钟 MCO1 和 MCO2。")]),t._v(" "),a("ul",[a("li",[t._v("MCO1 是向芯片的 PA8 引脚输出时钟。它有四个时钟来源分别为：HSI, LSE, HSE 和 PLL 时钟。")]),t._v(" "),a("li",[t._v("MCO2 是向芯片的\nPC9 输出时钟，它同样有四个时钟来源分别为：输出时钟，它同样有四个时钟来源分别为：HSE, PLL，SYSCLK 以及以及 PLLI2S 时钟。MCO 时钟输出时钟频率最大不超过 100MHz")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("D")]),t._v(" 为系统时钟。从图中可以看出，SYSCLK 系统时钟来源有三个方面：HSI, HSE 和 PLL。在我们实际应用中，因为对时钟速度要求都比较高我们才会选用 STM32F4 这种级别的处理器，所以一般情况下，都是采用 PLL 作为 SYSCLK 时钟源。根据前面的计算公式，就可以算出系统的 SYSCLK 是多少。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("E")]),t._v(" 中：这里我们指的是以太网 PTP 时钟，AHB 时钟，APB2 高速时钟，APB1 低速时钟。其中以太网 PTP 时钟是使用系统时钟。其中 。其中有很多 xCLK 容易让我们迷惑，下面就分清他们：")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("HCLK")]),t._v("：系统时钟 SYSCLK 经过 AHB 分频器(AHB Prescaler) 处理之后得到的时钟频率，不管是看上面的大图还是 CubeMX 上的时钟树图，都可以看到后面的 APBx 分频、直接输出到 Cortex 内核的定时器时钟频率都来源于这个 HCLK，其最大时钟为 168MHz")]),t._v(" "),a("li",[a("strong",[t._v("PCLKx")]),t._v("：在 HCLK 时钟频率输出之后，APBx 分频器(APBx Prescaler) 处理后得到的时钟频率为 PCLKx (x = 1 或 2)，这个时钟频率将直接为挂载在 APBx 总线上的外设提供时钟。而再次经过一个 APBx 倍频系数后才为 APBx 总线上的时钟频率。其中 AHB , APB2 高速时钟最大频率为 84MHz，而 APB1 低速时钟最大频率为 42MHz")]),t._v(" "),a("li",[a("strong",[t._v("FCLK")]),t._v("：Cortex 自出运行时钟频率")]),t._v(" "),a("li",[a("strong",[t._v("乘以倍频系数")]),t._v("：分频系数 1 或 8 可以得到 Cortex 系统定时器运行的频率，这个定时器也就是"),a("strong",[t._v("滴答定时器")]),t._v("的其中一个时钟源，顺便提一下，在 HAL 中，系统自动生成的代码工程中，滴答定时器的中断为 1ms 一次。但是关于 HAL 对滴答定时器的 bug 可以参考"),a("a",{attrs:{href:"https://blog.csdn.net/ybhuangfugui/article/details/88840329",target:"_blank",rel:"noopener noreferrer"}},[t._v("这篇文章"),a("OutboundLink")],1),t._v("，滴答定时器的时钟源只是 HCLK 而已（好像是这样）")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("F")]),t._v(" 为 I2S 时钟源。从图中可以看出，I2S 的时钟源来源于 PLLI2S 或者映射到 I2S_CKIN 引脚的外部时钟。 I2S 出于音质的考虑，对时钟精度要求很高")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("G")]),t._v(" 为 STM32 内部以太网 MAC 时钟的来源。对于 MII 接口来说，必须向外部\nPHY 芯片提供 25MHz 的时钟，这个时钟，可以由 PHY 芯片外接晶振，或者使用\nSTM32F4 的 MCO 输出来提供。然后，PHY 芯片再给 STM32F4 提供\nETH_MII_TX_CLK 和 ETH_MII_RX_CLK 时钟。对于 RMII 接口来说，外部必须提供 50MHz 的时钟驱动 PHY 和 STM32F4 的 ETH_RMII_REF_CLK，这个 50MHz 时钟可以来自 PHY、有源晶振或者 STM32F4 的 MCO。我们的开发板使用的是\nRMII 接口，使用 PHY 芯片提供 50MHz 时钟驱动 STM32F4 的\nETH_RMII_REF_CLK。")])])]),t._v(" "),a("h2",{attrs:{id:"hal库设置时钟"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hal库设置时钟"}},[t._v("#")]),t._v(" HAL库设置时钟")]),t._v(" "),a("p",[t._v("HAL 库中系统初始化并没有设置时钟的相关设置，所以我们必须要自行设置时钟。虽然可以通过 CubeMX 初始化时钟设置，但是知道这种方法也很重要。")]),t._v(" "),a("h3",{attrs:{id:"一般流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一般流程"}},[t._v("#")]),t._v(" 一般流程")]),t._v(" "),a("ol",[a("li",[t._v("使能 PWR 时钟：调用函数 "),a("code",[t._v("__HAL_RCC_PWR_CLK_ENABLE()")])]),t._v(" "),a("li",[t._v("设置调压器输出电压级别 ：调用函数 "),a("code",[t._v("__HAL_PWR_VOLTAGESCALING_CONFIG()")])]),t._v(" "),a("li",[t._v("选择是否开启 Over Driver 功能：调用函数 "),a("code",[t._v("HAL_PWREx_EnableOverDrive()")])]),t._v(" "),a("li",[t._v("配置"),a("strong",[t._v("时钟源")]),t._v("相关参数：调用函数 "),a("code",[t._v("HAL_RCC_OscConfig()")])]),t._v(" "),a("li",[t._v("配置"),a("strong",[t._v("系统时钟源")]),t._v("以及 AHB, APB1 和 APB2 的分频系数：调用函数 "),a("code",[t._v("HAL_RCC_ClockConfig()")])])]),t._v(" "),a("p",[t._v("其中，4 和 5 为主要的步骤，而前三步如果不需要的话的不是必要的")]),t._v(" "),a("h3",{attrs:{id:"配置时钟源"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置时钟源"}},[t._v("#")]),t._v(" 配置时钟源")]),t._v(" "),a("p",[t._v("在工程中，我们配置的为使用的的时钟源，也就是 HSE、LSE、HSI 或者 LSI，是通过函数"),a("code",[t._v("HAL_RCC_OscConfig()")]),t._v(" 实现的：")]),t._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[t._v("__weak HAL_StatusTypeDef "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("HAL_RCC_OscConfig")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("RCC_OscInitTypeDef "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("RCC_OscInitStruct"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 参数结构体的定义")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Step1 -------------------")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint32_t")]),t._v(" OscillatorType"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//需要选择配置的振荡器类型")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Step2 -------------------")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint32_t")]),t._v(" HSEState"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//HSE状态")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint32_t")]),t._v(" HSEPredivValue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//HSE预分频系数")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint32_t")]),t._v(" LSEState"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//LSE状态")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint32_t")]),t._v(" HSIState"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//HIS状态")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint32_t")]),t._v(" HSICalibrationValue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//HIS校准值")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint32_t")]),t._v(" LSIState"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//LSI状态")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Step3 -------------------")]),t._v("\n    RCC_PLLInitTypeDef PLL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//PLL配置")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("RCC_OscInitTypeDef"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br")])]),a("p",[t._v("其实对于此的初始化就是将参数填入这个结构体中即可，主要是三步，已在注释中写好：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("选择振荡器类型：如后面要开启 HSE，则 "),a("code",[t._v("OscillatorType")]),t._v(" 填入 "),a("code",[t._v("RCC_OSCILLATORTYPE_HSE")]),t._v(" 即可")])]),t._v(" "),a("li",[a("p",[t._v("在上一步选择哪个振荡器就把相应的 "),a("code",[t._v("xxxState")]),t._v(" 调成 "),a("code",[t._v("RCC_HSE_ON")]),t._v(" 即可，其他的振荡器语句相似")]),t._v(" "),a("p",[t._v("调节时钟源的预分频系数，也就是下面图 HSE 前的 "),a("code",[t._v("/1")]),t._v(" 这个系数，为 1 即设为 "),a("code",[t._v("RCC_HSE_PREDIV_DIV1")]),t._v(" 即可")])]),t._v(" "),a("li",[a("p",[t._v("设置 PLL 参数，这个结构体成员也是一个结构体，该结构体主要用来设置 PLL 时钟源以及相关分频倍频参数。形象的讲就是 CubeMX 里面的这个部分：")]),t._v(" "),a("div",{attrs:{align:"center"}},[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/CHANShu0508/images_shack/images/20201116204840.png"}})]),t._v(" "),a("p",[t._v("这个结构体是这个样子的：")]),t._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint32_t")]),t._v(" PLLState"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// PLL 状态")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint32_t")]),t._v(" PLLSource"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// PLL 时钟源")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在 F4 系列 -----------------------")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint32_t")]),t._v(" PLLM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// PLL 分频系数 M")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint32_t")]),t._v(" PLLN"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// PLL 倍频系数 N")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint32_t")]),t._v(" PLLP"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// PLL 分频系数 P")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint32_t")]),t._v(" PLLQ"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// PLL 分频系数 Q")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// F1 系列中只有 --------------------")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint32_t")]),t._v(" PLLMUL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// PLL 主分频系数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("RCC_PLLInitTypeDef"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 初始化函数")]),t._v("\n__weak "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("HAL_RCC_OscConfig")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("RCC_PLLInitTypeDef "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("PLL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br")])]),a("p",[t._v("从总图中可以看出，PLL 输出到 SYSCLK 的时钟频率走的是 PLLP，所以这个参数一定要设置！而其余的参数设置则与上面几乎一致")]),t._v(" "),a("ul",[a("li",[t._v("打开 PLL 则将 "),a("code",[t._v("PLLState")]),t._v(" 设置为 "),a("code",[t._v("RCC_PLL_ON")])]),t._v(" "),a("li",[t._v("设置 PLL 来源，根据上一个结构体指定的源设置，若为 HSE，则为："),a("code",[t._v("RCC_PLLSOURCE_HSE")])]),t._v(" "),a("li",[t._v("设置各个分频系数与倍频系数")])])])]),t._v(" "),a("h3",{attrs:{id:"配置系统时钟"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置系统时钟"}},[t._v("#")]),t._v(" 配置系统时钟")]),t._v(" "),a("p",[t._v("主要使用的是 "),a("code",[t._v("HAL_RCC_ClockConfig()")]),t._v(" 这个函数，它有两个参数：")]),t._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[t._v("HAL_StatusTypeDef "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("HAL_RCC_ClockConfig")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("RCC_ClkInitTypeDef "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("RCC_ClkInitStruct"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint32_t")]),t._v(" FLatency"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 第一个参数结构体定义 ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint32_t")]),t._v(" ClockType"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint32_t")]),t._v(" SYSCLKSource"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint32_t")]),t._v(" AHBCLKDivider"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint32_t")]),t._v(" APB1CLKDivider"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint32_t")]),t._v(" APB2CLKDivider"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" RCC_ClkInitTypeDef"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br")])]),a("p",[t._v("第一个结构体参数中：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("首个成员 "),a("code",[t._v("ClockType")]),t._v(" 指定了你接下来需要设定的参数的东西，一般我们会同时设定 SYSCLK、HCLK、PCLK1 与 PCLK2，可以这样写：")]),t._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[t._v("RCC_ClkInitStructure"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ClockType "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("RCC_CLOCKTYPE_SYSCLK"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("RCC_CLOCKTYPE_HCLK"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("RCC_CLOCKTYPE_PCLK1"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("RCC_CLOCKTYPE_PCLK2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])])]),t._v(" "),a("li",[a("p",[t._v("随后通过 "),a("code",[t._v("SYSCLKSource")]),t._v(" 设置系统时钟的输入源，这里我们一般会选择刚刚设置过的 PLL，即将此成员设置为 "),a("code",[t._v("RCC_SYSCLKSOURCE_PLLCLK")])])]),t._v(" "),a("li",[a("p",[t._v("下面的三个成员分别设置了 AHB、APB1、APB2 的分频系数，其中：")]),t._v(" "),a("ul",[a("li",[t._v("设置 AHB 时，由于其输入为系统时钟，所以格式为 "),a("code",[t._v("RCC_SYSCLK_DIV1")]),t._v("，即设置 AHB 分频系数为1，改变时只需要改变后面的数字即可（但要在规定范围内）")]),t._v(" "),a("li",[t._v("设置 APBx 时，其输入为 HCLK，所以格式为 "),a("code",[t._v("PCC_HCLK_DIV2")]),t._v("，将 APBx 分频系数设为2")])])])]),t._v(" "),a("p",[t._v("而这个函数的第二个参数 "),a("code",[t._v("FLatency")]),t._v(" 用于设置 FLASH 延迟")]),t._v(" "),a("blockquote",[a("p",[t._v("关于 FLASH 延迟周期，你目前只需要知道是由于 CPU 运行的速度要大于 FLASH 读写的速度，所以要设置 CPU 等待 FLASH。在时钟初始化前，FLASH 延迟周期默认是 0，即一个等待周期，这个时候需要将 "),a("code",[t._v("LATENCY")]),t._v(" 也就是等待周期寄存器设为 5。")]),t._v(" "),a("p",[t._v("但是在初始化时钟，将系统时钟频率设为 72 MHz 后，虽然 FLASH 需要 6 个 CPU 等待周期，但是由于 STM32F4 具有自适应实时存储器加速器（ART Accelerator）Accelerator)，通过指令缓存存储器，预取指令，实现相当于 0 FLASH 等待的运行速度。关于自适应实时存储器加速器的详细介绍，可以参考《 STM32F4xx 中文参考手册》3.4.2节。但是一般也将这个值设为 2")])]),t._v(" "),a("p",[t._v("对于流程的前三项，不需要 RTC 实时时钟以及唤醒等功能的话一般是不需要设置的。所以可以参考一下 CubeMX 自动生成的代码：")]),t._v(" "),a("h2",{attrs:{id:"代码示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码示例"}},[t._v("#")]),t._v(" 代码示例")]),t._v(" "),a("h3",{attrs:{id:"cubemx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cubemx"}},[t._v("#")]),t._v(" CubeMX")]),t._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n  * @brief System Clock Configuration\n  * @retval None\n  */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("SystemClock_Config")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    RCC_OscInitTypeDef RCC_OscInitStruct "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    RCC_ClkInitTypeDef RCC_ClkInitStruct "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** Initializes the RCC Oscillators according to the specified parameters\n    * in the RCC_OscInitTypeDef structure.\n    */")]),t._v("\n    RCC_OscInitStruct"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("OscillatorType "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" RCC_OSCILLATORTYPE_HSE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//时钟源为HSE")]),t._v("\n    RCC_OscInitStruct"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("HSEState "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" RCC_HSE_ON"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//打开HSE")]),t._v("\n    RCC_OscInitStruct"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("HSEPredivValue "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" RCC_HSE_PREDIV_DIV1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//HSE预分频")]),t._v("\n    RCC_OscInitStruct"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("HSIState "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" RCC_HSI_ON"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//时钟源为HSI")]),t._v("\n    RCC_OscInitStruct"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PLL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PLLState "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" RCC_PLL_ON"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//打开PLL")]),t._v("\n    RCC_OscInitStruct"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PLL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PLLSource "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" RCC_PLLSOURCE_HSE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//PLL时钟源选择HSE")]),t._v("\n    RCC_OscInitStruct"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PLL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PLLMUL "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" RCC_PLL_MUL9"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//主PLL倍频因子")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("HAL_RCC_OscConfig")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("RCC_OscInitStruct"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" HAL_OK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("         "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//初始化")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Error_Handler")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** Initializes the CPU, AHB and APB buses clocks\n    */")]),t._v("\n    RCC_ClkInitStruct"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ClockType "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" RCC_CLOCKTYPE_HCLK "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" RCC_CLOCKTYPE_SYSCLK\n                                  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" RCC_CLOCKTYPE_PCLK1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" RCC_CLOCKTYPE_PCLK2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    RCC_ClkInitStruct"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SYSCLKSource "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" RCC_SYSCLKSOURCE_PLLCLK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//设置系统时钟时钟源为PLL")]),t._v("\n    RCC_ClkInitStruct"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("AHBCLKDivider "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" RCC_SYSCLK_DIV1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("          "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//AHB分频系数为1")]),t._v("\n    RCC_ClkInitStruct"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("APB1CLKDivider "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" RCC_HCLK_DIV2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//APB1分频系数为2")]),t._v("\n    RCC_ClkInitStruct"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("APB2CLKDivider "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" RCC_HCLK_DIV1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//APB2分频系数为1")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("HAL_RCC_ClockConfig")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("RCC_ClkInitStruct"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" FLASH_LATENCY_2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" HAL_OK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//同时设置FLASH延时周期为2WS，也就是3个CPU周期")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Error_Handler")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br"),a("span",{staticClass:"line-number"},[t._v("36")]),a("br"),a("span",{staticClass:"line-number"},[t._v("37")]),a("br")])]),a("p",[t._v("这段代码实现了这样的时钟配置：")]),t._v(" "),a("div",{attrs:{align:"center"}},[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/CHANShu0508/images_shack/images/20201117190446.png"}})]),t._v("s\n"),a("p",[t._v("CubeMX 同时打开了 HSE 与 HSI，随后进行初始化")]),t._v(" "),a("h3",{attrs:{id:"正点原子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#正点原子"}},[t._v("#")]),t._v(" 正点原子")]),t._v(" "),a("p",[t._v("这是正点原子的参考初始化时钟例程：")]),t._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 时钟系统配置函数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// PLL:选择的倍频数，RCC_PLL_MUL2~RCC_PLL_MUL16")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回值:0,成功;1,失败")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Stm32_Clock_Init")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("u32 PLL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    HAL_StatusTypeDef ret "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" HAL_OK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    RCC_OscInitTypeDef RCC_OscInitStructure"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    RCC_ClkInitTypeDef RCC_ClkInitStructure"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    RCC_OscInitStructure"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("OscillatorType"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("RCC_OSCILLATORTYPE_HSE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    \t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//时钟源为HSE")]),t._v("\n    RCC_OscInitStructure"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("HSEState"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("RCC_HSE_ON"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                      \t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//打开HSE")]),t._v("\n\tRCC_OscInitStructure"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("HSEPredivValue"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("RCC_HSE_PREDIV_DIV1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//HSE预分频")]),t._v("\n    RCC_OscInitStructure"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PLL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PLLState"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("RCC_PLL_ON"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//打开PLL")]),t._v("\n    RCC_OscInitStructure"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PLL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PLLSource"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("RCC_PLLSOURCE_HSE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//PLL时钟源选择HSE")]),t._v("\n    RCC_OscInitStructure"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PLL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PLLMUL"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("PLL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \t\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//主PLL倍频因子")]),t._v("\n    ret"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("HAL_RCC_OscConfig")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("RCC_OscInitStructure"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//初始化")]),t._v("\n\t\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ret"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v("HAL_OK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//选中PLL作为系统时钟源并且配置HCLK,PCLK1和PCLK2")]),t._v("\n    RCC_ClkInitStructure"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ClockType"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("RCC_CLOCKTYPE_SYSCLK"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("RCC_CLOCKTYPE_HCLK"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("RCC_CLOCKTYPE_PCLK1"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("RCC_CLOCKTYPE_PCLK2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    RCC_ClkInitStructure"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SYSCLKSource"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("RCC_SYSCLKSOURCE_PLLCLK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//设置系统时钟时钟源为PLL")]),t._v("\n    RCC_ClkInitStructure"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("AHBCLKDivider"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("RCC_SYSCLK_DIV1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//AHB分频系数为1")]),t._v("\n    RCC_ClkInitStructure"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("APB1CLKDivider"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("RCC_HCLK_DIV2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \t\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//APB1分频系数为2")]),t._v("\n    RCC_ClkInitStructure"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("APB2CLKDivider"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("RCC_HCLK_DIV1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \t\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//APB2分频系数为1")]),t._v("\n    ret"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("HAL_RCC_ClockConfig")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("RCC_ClkInitStructure"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("FLASH_LATENCY_2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//同时设置FLASH延时周期为2WS，也就是3个CPU周期。")]),t._v("\n\t\t\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ret"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v("HAL_OK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br")])]),a("p",[t._v("相较于 CubeMX 自动生成的程序，这里的 PLL 主倍频系数需要自己设定，其余并无差异。")]),t._v(" "),a("p",[t._v("无特殊需求的话，正常开发做到这些就足够了")]),t._v(" "),a("h2",{attrs:{id:"one-more-thing"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#one-more-thing"}},[t._v("#")]),t._v(" One More Thing")]),t._v(" "),a("p",[t._v("什么是时钟周期、CPU周期与指令周期？")]),t._v(" "),a("p",[t._v("我们从大到小说：")]),t._v(" "),a("h3",{attrs:{id:"指令周期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#指令周期"}},[t._v("#")]),t._v(" 指令周期")]),t._v(" "),a("p",[t._v("我们知道一条指令的执行大致可以分为三个阶段：")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("Fetch")]),t._v("（取指），也就是从 PC 寄存器里找到对应的指令地址，根据指令地址从内存里把具体的指令，加载到指令寄存器中，然后把 PC 寄存器自增，好在未来执行下一条指令。")]),t._v(" "),a("li",[a("strong",[t._v("Decode")]),t._v("（译码），也就是根据指令寄存器里面的指令，解析成要进行什么样的操作，是 R、I、J 中的哪一种指令，具体要操作哪些寄存器、数据或者内存地址。")]),t._v(" "),a("li",[a("strong",[t._v("Execute")]),t._v("（执行指令），也就是实际运行对应的 R、I、J 这些特定的指令，进行算术逻辑操作、数据传输或者直接的地址跳转。")])]),t._v(" "),a("p",[t._v("简单来讲，执行完这三个阶段所需要的时间就是"),a("strong",[t._v("指令周期")])]),t._v(" "),a("h3",{attrs:{id:"机器周期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#机器周期"}},[t._v("#")]),t._v(" 机器周期")]),t._v(" "),a("p",[t._v("机器周期又称为 CPU 周期。在 CPU 执行指令时，通常一个指令会由若干"),a("strong",[t._v("基本操作")]),t._v("组成（我们一般称取指、读存储器或写存储器这些基本操作为基本操作），执行完一次"),a("strong",[t._v("基本操作")]),t._v("所需要的时间称为"),a("strong",[t._v("机器周期")]),t._v("。通常我们称内存中读取一个指令字所需要的最短时间为一个"),a("strong",[t._v("CPU周期")])]),t._v(" "),a("h3",{attrs:{id:"时钟周期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#时钟周期"}},[t._v("#")]),t._v(" 时钟周期")]),t._v(" "),a("p",[t._v("时钟周期就是时钟频率的倒数。前面提到指令中的基本操作，，而这些基本操作又是由许多"),a("strong",[t._v("CPU的基本操作")]),t._v("组成的，执行一个这样的"),a("strong",[t._v("CPU的基本操作")]),t._v("所需要的时间就恰好是一个时钟周期")]),t._v(" "),a("p",[t._v("所以总的来讲，三者的关系大概如图：")]),t._v(" "),a("div",{attrs:{align:"center"}},[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/CHANShu0508/images_shack/images/20201117184613.png"}})])])}),[],!1,null,null,null);s.default=r.exports}}]);