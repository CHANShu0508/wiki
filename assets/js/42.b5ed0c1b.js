(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{452:function(s,t,a){"use strict";a.r(t);var e=a(20),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"语言方面"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语言方面"}},[s._v("#")]),s._v(" 语言方面")]),s._v(" "),a("h3",{attrs:{id:"关于函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关于函数"}},[s._v("#")]),s._v(" 关于函数")]),s._v(" "),a("ul",[a("li",[s._v("关于不管是什么片上设备的端口号，在传参数的时候都是一串32位二进制的无符号整数，也就是"),a("code",[s._v("uint32_t")])])]),s._v(" "),a("h3",{attrs:{id:"typedef-头文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#typedef-头文件"}},[s._v("#")]),s._v(" typedef 头文件")]),s._v(" "),a("p",[s._v("你可以自己编写一个"),a("code",[s._v("struct_typedef.h")]),s._v("头文件来缩短、好认定义一些量所用到的符号：")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("ifndef")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[s._v("STRUCT_TYPEDEF_H")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token macro-name"}},[s._v("STRUCT_TYPEDEF_H")])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typedef")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("signed")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("int8_t")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typedef")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("signed")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("short")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("int16_t")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typedef")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("signed")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("int32_t")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typedef")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("signed")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("int64_t")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* exact-width unsigned integer types */")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typedef")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("uint8_t")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typedef")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("short")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("uint16_t")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typedef")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("uint32_t")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typedef")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("uint64_t")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typedef")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("bool_t")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typedef")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("float")]),s._v(" fp32"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typedef")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v(" fp64"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("endif")])]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br")])]),a("h2",{attrs:{id:"寄存器操作技巧"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#寄存器操作技巧"}},[s._v("#")]),s._v(" 寄存器操作技巧")]),s._v(" "),a("p",[s._v("一句话技巧：清除善用 "),a("code",[s._v("&")]),s._v(" 和 "),a("code",[s._v("~")]),s._v("，赋值用 "),a("code",[s._v("|")])]),s._v(" "),a("h3",{attrs:{id:"将某位清零"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#将某位清零"}},[s._v("#")]),s._v(" 将某位清零")]),s._v(" "),a("p",[s._v("假设 "),a("code",[s._v("a")]),s._v(" 为一个寄存器，且其中已经有数值了，为了将其中某一位清零而其他位保持不变，可以使用：")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 定义一个变量a = 1001 1111 b (二进制数)")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x9f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 对bit2 清零")]),s._v("\n\na "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 括号中的1 左移两位，(1<<2)得二进制数：0000 0100 b")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 按位取反，~(1<<2)得1111 1011 b")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 假如a 中原来的值为二进制数： a = 1001 1111 b")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 所得的数与a 作”位与&”运算，a = (1001 1111 b)&(1111 1011 b),")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 经过运算后，a 的值 a=1001 1011 b")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// a 的bit2 位被被零，而其它位不变。")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("h3",{attrs:{id:"将连续几位清零"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#将连续几位清零"}},[s._v("#")]),s._v(" 将连续几位清零")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 若把 a 中的二进制位分成 2 个一组")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 即bit0、bit1 为第 0 组，bit2、bit3 为第 1 组，")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// bit4、bit5 为第 2 组，bit6、bit7 为第 3 组")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 要对第 1 组的bit2、bit3 清零")]),s._v("\n\na "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("提示")]),s._v(" "),a("p",[s._v("乘法的优先级要高于左移，算术运算的优先级均高于位运算")])]),s._v(" "),a("p",[s._v("流程是：")]),s._v(" "),a("ul",[a("li",[s._v("括号中的 3 左移两位，"),a("code",[s._v("(3<<2*1)")]),s._v("得二进制数："),a("code",[s._v("0000 1100 b")])]),s._v(" "),a("li",[s._v("按位取反，"),a("code",[s._v("~(3<<2*1)")]),s._v("得 "),a("code",[s._v("1111 0011 b")])]),s._v(" "),a("li",[s._v("假如 "),a("code",[s._v("a")]),s._v(" 中原来的值为二进制数："),a("code",[s._v("a = 1001 1111 b")])]),s._v(" "),a("li",[s._v("所得的数与 "),a("code",[s._v("a")]),s._v(" 作“位与&”运算，"),a("code",[s._v("a = (1001 1111 b)&(1111 0011 b)")])]),s._v(" "),a("li",[s._v("经过运算后，"),a("code",[s._v("a")]),s._v(" 的值 "),a("code",[s._v("a=1001 0011 b")])]),s._v(" "),a("li",[a("code",[s._v("a")]),s._v(" 的第 1 组的 bit2、bit3 被清零，而其它位不变")])]),s._v(" "),a("p",[s._v("更加一般的：")]),s._v(" "),a("ul",[a("li",[s._v("上述 "),a("code",[s._v("(~(3<<2*1))")]),s._v(" 中的 "),a("code",[s._v("1")]),s._v(" 即为组编号如清零第 3 组 bit6、bit7 此处应为 3")]),s._v(" "),a("li",[s._v("括号中的 "),a("code",[s._v("2")]),s._v(" 为每组的位数，每组有 2 个二进制位；若分成 4 个一组，此处即为 4")]),s._v(" "),a("li",[s._v("括号中的 "),a("code",[s._v("3")]),s._v(" 是组内所有位都为 1 时的值；若分成 4 个一组，此处即为二进制数 "),a("code",[s._v("1111 b")]),s._v("，例如对第 2 组bit4、bit5 清零 "),a("code",[s._v("a &= ~(3<<2*2)")])])]),s._v(" "),a("h3",{attrs:{id:"对某几位赋值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对某几位赋值"}},[s._v("#")]),s._v(" 对某几位赋值")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// a = 1000 0011 b")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 此时对清零后的第 2 组bit4、bit5 设置成二进制数“01 b ”")]),s._v("\n\na "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// a = 1001 0011 b，成功设置了第 2 组的值，其它组不变")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("与上面的清除相似")]),s._v(" "),a("h2",{attrs:{id:"调试方面"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#调试方面"}},[s._v("#")]),s._v(" 调试方面")]),s._v(" "),a("h3",{attrs:{id:"keil-的st-link下载与串口下载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#keil-的st-link下载与串口下载"}},[s._v("#")]),s._v(" Keil 的ST-Link下载与串口下载")]),s._v(" "),a("p",[s._v("主要是加密的问题，如果在 FlyMCU 上设置了读加密，则在 Keil 上的擦除是无效的。Keil 此时无法将程序 load 进单片机内部。尽量还是使用 ST-Link。")]),s._v(" "),a("p",[s._v("顺带一提，那个杨桃的最小核心板的串口是天生的 TTL 转 USB，不需要你再去接线了")])])}),[],!1,null,null,null);t.default=n.exports}}]);